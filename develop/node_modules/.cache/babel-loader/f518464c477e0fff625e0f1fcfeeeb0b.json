{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\src\\\\components\\\\layout\\\\MainNavbar\\\\NavbarNav\\\\UserActions.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Collapse, NavItem, NavLink, Row } from \"shards-react\";\nimport { defaultAvatar, languageCode, parentsParameters } from \"../../../../utils/general_utils\";\nimport { profileLogout, profilePageTitle, profileSettings, profileSettingsAdminSectionTitle } from \"../../../../utils/page_titles_strings\";\nimport { fetchUserDoc, userLogOut } from \"../../../../firebase_scripts/profile_functions\";\nimport { firebase_auth } from \"../../../../firebase-config\";\nexport function f() {\n  console.log(\"UPDATE NAVBAR\"); // check the local storage to see if it's still the same user\n\n  var localUser = JSON.parse(window.localStorage.getItem(\"userDoc\")); // if no information about the user in the LS, then do nothing\n\n  if (localUser == null) {\n    console.log(\"localUser null\");\n    return;\n  }\n\n  var displayName = localUser[parentsParameters.NAME[languageCode]];\n  var photoURL = localUser[parentsParameters.PHOTO[languageCode]];\n  var isAdmin = localUser[parentsParameters.ADMIN[languageCode]];\n  console.log(\"photoURL barra -> \" + photoURL);\n  UserActions.setState({\n    userName: displayName,\n    userPhoto: photoURL,\n    isAdmin: isAdmin\n  });\n}\n\nvar UserActions = /*#__PURE__*/function (_React$Component) {\n  _inherits(UserActions, _React$Component);\n\n  var _super = _createSuper(UserActions);\n\n  function UserActions(props) {\n    var _this;\n\n    _classCallCheck(this, UserActions);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      visible: false,\n      userName: \"ND\",\n      userPhoto: defaultAvatar,\n      isAdmin: false\n    };\n    _this.toggleUserActions = _this.toggleUserActions.bind(_assertThisInitialized(_this));\n    _this.updateNavBarUserPhotoAndName = _this.updateNavBarUserPhotoAndName.bind(_assertThisInitialized(_this)); //this.updateNavBarUserPhotoAndNameV2 = this.updateNavBarUserPhotoAndNameV2.bind(this);\n\n    return _this;\n  }\n  /*********************************** LIFECYCLE ***********************************/\n\n\n  _createClass(UserActions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this.updateNavBarUserPhotoAndName(); //this.updateNavBarUserPhotoAndNameV2();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"toggleUserActions\",\n    value: function toggleUserActions() {\n      this.setState({\n        visible: !this.state.visible\n      });\n    }\n  }, {\n    key: \"updateNavBarUserPhotoAndNameV2\",\n    value: function updateNavBarUserPhotoAndNameV2() {\n      var currentUser = JSON.parse(window.localStorage.getItem(\"userDoc\")); //console.log(\"local User barra: \" + currentUser);\n\n      if (currentUser != null) {\n        var displayName = currentUser[parentsParameters.NAME[languageCode]];\n        var photoURL = currentUser[parentsParameters.PHOTO[languageCode]];\n        var isAdmin = currentUser[parentsParameters.ADMIN[languageCode]];\n        this.setState({\n          userName: displayName,\n          userPhoto: photoURL,\n          isAdmin: isAdmin\n        });\n      }\n    }\n  }, {\n    key: \"updateNavBar\",\n    value: function updateNavBar() {\n      console.log(\"UPDATE NAVBAR\"); // check the local storage to see if it's still the same user\n\n      var localUser = JSON.parse(window.localStorage.getItem(\"userDoc\")); // if no information about the user in the LS, then do nothing\n\n      if (localUser == null) {\n        console.log(\"localUser null\");\n        return;\n      }\n\n      var displayName = localUser[parentsParameters.NAME[languageCode]];\n      var photoURL = localUser[parentsParameters.PHOTO[languageCode]];\n      var isAdmin = localUser[parentsParameters.ADMIN[languageCode]];\n      console.log(\"photoURL barra -> \" + photoURL);\n      UserActions.setState({\n        userName: displayName,\n        userPhoto: photoURL,\n        isAdmin: isAdmin\n      });\n    }\n  }, {\n    key: \"updateNavBarUserPhotoAndName\",\n    value: function updateNavBarUserPhotoAndName() {\n      var _this2 = this;\n\n      console.log(\"ENTREI NO UPDATE COM CONTEXT\"); // check the local storage to see if it's still the same user\n\n      var localUser = JSON.parse(window.localStorage.getItem(\"userDoc\"));\n      var firebaseUser = firebase_auth.currentUser;\n      console.log(\"localUser barra: \" + JSON.stringify(localUser));\n      console.log(\"currentUser: barra\" + JSON.stringify(firebaseUser));\n\n      if (localUser != null && firebaseUser != null) {\n        var localEmail = localUser[parentsParameters.EMAIL[languageCode]]; // if the local storage user is old, update the nav bar with the new user (fetching it from firestore)\n\n        if (localEmail !== firebaseUser.email) {\n          //console.log(\"fetch na barra\");\n          fetchUserDoc(firebaseUser.email).then(function (result) {\n            //console.log(\"Result userDoc: \" + JSON.stringify(result));\n            if (result.error == null) {\n              // no error\n              var displayName = result[parentsParameters.NAME[languageCode]];\n              var photoURL = result[parentsParameters.PHOTO[languageCode]];\n              var isAdmin = result[parentsParameters.ADMIN[languageCode]];\n\n              _this2.setState({\n                userName: displayName,\n                userPhoto: photoURL,\n                isAdmin: isAdmin\n              });\n            }\n          }).catch(function (error) {\n            console.log(\"error no fetch da barra: \" + JSON.stringify(error));\n          });\n        } else {\n          //console.log(\"aproveitar o storage\");\n          var displayName = localUser[parentsParameters.NAME[languageCode]];\n          var photoURL = localUser[parentsParameters.PHOTO[languageCode]];\n          var isAdmin = localUser[parentsParameters.ADMIN[languageCode]];\n          this.setState({\n            userName: displayName,\n            userPhoto: photoURL,\n            isAdmin: isAdmin\n          });\n        }\n      } else if (localUser != null) {\n        //console.log(\"aproveitar o storage\");\n        var _displayName = localUser[parentsParameters.NAME[languageCode]];\n        var _photoURL = localUser[parentsParameters.PHOTO[languageCode]];\n        var _isAdmin = localUser[parentsParameters.ADMIN[languageCode]];\n        this.setState({\n          userName: _displayName,\n          userPhoto: _photoURL,\n          isAdmin: _isAdmin\n        });\n      } else if (firebaseUser != null) {\n        // if this code runs, then there's no user in local storage, so we have to fetch it from Firestore\n        fetchUserDoc(firebaseUser.email).then(function (result) {\n          //console.log(\"Result userDoc: \" + JSON.stringify(result));\n          if (result.error == null) {\n            // no error\n            var _displayName2 = result[parentsParameters.NAME[languageCode]];\n            var _photoURL2 = result[parentsParameters.PHOTO[languageCode]];\n            var _isAdmin2 = result[parentsParameters.ADMIN[languageCode]];\n\n            _this2.setState({\n              userName: _displayName2,\n              userPhoto: _photoURL2,\n              isAdmin: _isAdmin2\n            });\n          }\n        }).catch(function (error) {\n          console.log(\"error no fetch da barra: \" + JSON.stringify(error));\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(NavItem, {\n        tag: Dropdown,\n        caret: true,\n        toggle: this.toggleUserActions,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggle, {\n        caret: true,\n        tag: NavLink,\n        className: \"text-nowrap px-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"user-avatar rounded-circle mr-2\",\n        src: this.state.userPhoto,\n        alt: \"User photo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"d-none d-md-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }\n      }, this.state.userName)), /*#__PURE__*/React.createElement(Collapse, {\n        tag: DropdownMenu,\n        right: true,\n        small: true,\n        open: this.state.visible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DropdownItem, {\n        tag: Link,\n        to: \"profile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"material-icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, \"\\uE7FD\"), \" \", profilePageTitle[languageCode]), /*#__PURE__*/React.createElement(DropdownItem, {\n        tag: Link,\n        to: \"profile-settings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"material-icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }\n      }, \"\\uE8B8\"), \" \", profileSettings[languageCode], \" \"), this.state.isAdmin ? /*#__PURE__*/React.createElement(DropdownItem, {\n        tag: Link,\n        to: \"admin-settings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"material-icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      }, \"vpn_key\"), \" \", profileSettingsAdminSectionTitle[languageCode], \" \") : null, /*#__PURE__*/React.createElement(DropdownItem, {\n        divider: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(DropdownItem, {\n        tag: Link,\n        onClick: userLogOut,\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"material-icons text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }\n      }, \"\\uE879\"), \" \", profileLogout[languageCode])));\n    }\n  }]);\n\n  return UserActions;\n}(React.Component);\n\nexport { UserActions as default };","map":{"version":3,"sources":["C:/Users/User/Desktop/Ambiente de Trabalho/Universidade/Ano 3/Semestre 2/PI/Projeto/repos/pi-assoc-pais/develop/src/components/layout/MainNavbar/NavbarNav/UserActions.js"],"names":["React","Link","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Collapse","NavItem","NavLink","Row","defaultAvatar","languageCode","parentsParameters","profileLogout","profilePageTitle","profileSettings","profileSettingsAdminSectionTitle","fetchUserDoc","userLogOut","firebase_auth","f","console","log","localUser","JSON","parse","window","localStorage","getItem","displayName","NAME","photoURL","PHOTO","isAdmin","ADMIN","UserActions","setState","userName","userPhoto","props","state","visible","toggleUserActions","bind","updateNavBarUserPhotoAndName","_isMounted","currentUser","firebaseUser","stringify","localEmail","EMAIL","email","then","result","error","catch","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Collapse,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n} from \"shards-react\";\r\nimport {\r\n  defaultAvatar,\r\n  languageCode,\r\n  parentsParameters,\r\n} from \"../../../../utils/general_utils\";\r\nimport {\r\n  profileLogout,\r\n  profilePageTitle,\r\n  profileSettings, profileSettingsAdminSectionTitle,\r\n} from \"../../../../utils/page_titles_strings\";\r\nimport {\r\n  fetchUserDoc,\r\n  userLogOut,\r\n} from \"../../../../firebase_scripts/profile_functions\";\r\nimport { firebase_auth } from \"../../../../firebase-config\";\r\n\r\n\r\nexport function f() {\r\n  console.log(\"UPDATE NAVBAR\");\r\n  // check the local storage to see if it's still the same user\r\n  let localUser = JSON.parse(window.localStorage.getItem(\"userDoc\"));\r\n\r\n  // if no information about the user in the LS, then do nothing\r\n  if(localUser==null){\r\n    console.log(\"localUser null\");\r\n    return;\r\n  }\r\n\r\n  const displayName = localUser[parentsParameters.NAME[languageCode]];\r\n  const photoURL = localUser[parentsParameters.PHOTO[languageCode]];\r\n  const isAdmin = localUser[parentsParameters.ADMIN[languageCode]];\r\n  console.log(\"photoURL barra -> \" + photoURL);\r\n  UserActions.setState({ userName: displayName, userPhoto: photoURL, isAdmin : isAdmin });\r\n}\r\n\r\nexport default class UserActions extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: false,\r\n      userName: \"ND\",\r\n      userPhoto: defaultAvatar,\r\n      isAdmin : false\r\n    };\r\n\r\n    this.toggleUserActions = this.toggleUserActions.bind(this);\r\n    this.updateNavBarUserPhotoAndName = this.updateNavBarUserPhotoAndName.bind(this);\r\n    //this.updateNavBarUserPhotoAndNameV2 = this.updateNavBarUserPhotoAndNameV2.bind(this);\r\n  }\r\n\r\n  /*********************************** LIFECYCLE ***********************************/\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    this.updateNavBarUserPhotoAndName();\r\n    //this.updateNavBarUserPhotoAndNameV2();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  toggleUserActions() {\r\n    this.setState({\r\n      visible: !this.state.visible,\r\n    });\r\n  }\r\n\r\n  updateNavBarUserPhotoAndNameV2() {\r\n    let currentUser = JSON.parse(window.localStorage.getItem(\"userDoc\"));\r\n    //console.log(\"local User barra: \" + currentUser);\r\n    if (currentUser != null) {\r\n      const displayName = currentUser[parentsParameters.NAME[languageCode]];\r\n      const photoURL = currentUser[parentsParameters.PHOTO[languageCode]];\r\n      const isAdmin = currentUser[parentsParameters.ADMIN[languageCode]];\r\n\r\n      this.setState({ userName: displayName, userPhoto: photoURL, isAdmin : isAdmin });\r\n    }\r\n  }\r\n\r\n  updateNavBar(){\r\n    console.log(\"UPDATE NAVBAR\");\r\n    // check the local storage to see if it's still the same user\r\n    let localUser = JSON.parse(window.localStorage.getItem(\"userDoc\"));\r\n\r\n    // if no information about the user in the LS, then do nothing\r\n    if(localUser==null){\r\n      console.log(\"localUser null\");\r\n      return;\r\n    }\r\n\r\n    const displayName = localUser[parentsParameters.NAME[languageCode]];\r\n    const photoURL = localUser[parentsParameters.PHOTO[languageCode]];\r\n    const isAdmin = localUser[parentsParameters.ADMIN[languageCode]];\r\n    console.log(\"photoURL barra -> \" + photoURL);\r\n    UserActions.setState({ userName: displayName, userPhoto: photoURL, isAdmin : isAdmin });\r\n  }\r\n\r\n  updateNavBarUserPhotoAndName() {\r\n    console.log(\"ENTREI NO UPDATE COM CONTEXT\");\r\n    // check the local storage to see if it's still the same user\r\n    let localUser = JSON.parse(window.localStorage.getItem(\"userDoc\"));\r\n    let firebaseUser = firebase_auth.currentUser;\r\n\r\n    console.log(\"localUser barra: \" + JSON.stringify(localUser));\r\n    console.log(\"currentUser: barra\" + JSON.stringify(firebaseUser));\r\n\r\n    if (localUser != null && firebaseUser != null) {\r\n      const localEmail = localUser[parentsParameters.EMAIL[languageCode]];\r\n      // if the local storage user is old, update the nav bar with the new user (fetching it from firestore)\r\n      if (localEmail !== firebaseUser.email) {\r\n        //console.log(\"fetch na barra\");\r\n        fetchUserDoc(firebaseUser.email)\r\n          .then((result) => {\r\n            //console.log(\"Result userDoc: \" + JSON.stringify(result));\r\n            if (result.error == null) {\r\n              // no error\r\n              const displayName = result[parentsParameters.NAME[languageCode]];\r\n              const photoURL = result[parentsParameters.PHOTO[languageCode]];\r\n              const isAdmin = result[parentsParameters.ADMIN[languageCode]];\r\n              this.setState({ userName: displayName, userPhoto: photoURL, isAdmin : isAdmin });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"error no fetch da barra: \" + JSON.stringify(error));\r\n          });\r\n      } else {\r\n        //console.log(\"aproveitar o storage\");\r\n        const displayName = localUser[parentsParameters.NAME[languageCode]];\r\n        const photoURL = localUser[parentsParameters.PHOTO[languageCode]];\r\n        const isAdmin = localUser[parentsParameters.ADMIN[languageCode]];\r\n        this.setState({ userName: displayName, userPhoto: photoURL, isAdmin : isAdmin });\r\n      }\r\n    }\r\n    else if(localUser!=null) {\r\n      //console.log(\"aproveitar o storage\");\r\n      const displayName = localUser[parentsParameters.NAME[languageCode]];\r\n      const photoURL = localUser[parentsParameters.PHOTO[languageCode]];\r\n      const isAdmin = localUser[parentsParameters.ADMIN[languageCode]];\r\n      this.setState({ userName: displayName, userPhoto: photoURL, isAdmin : isAdmin });\r\n    }\r\n    else if(firebaseUser!=null) {\r\n      // if this code runs, then there's no user in local storage, so we have to fetch it from Firestore\r\n      fetchUserDoc(firebaseUser.email)\r\n        .then((result) => {\r\n          //console.log(\"Result userDoc: \" + JSON.stringify(result));\r\n          if (result.error == null) {\r\n            // no error\r\n            const displayName = result[parentsParameters.NAME[languageCode]];\r\n            const photoURL = result[parentsParameters.PHOTO[languageCode]];\r\n            const isAdmin = result[parentsParameters.ADMIN[languageCode]];\r\n            this.setState({ userName: displayName, userPhoto: photoURL, isAdmin : isAdmin });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error no fetch da barra: \" + JSON.stringify(error));\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\r\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\r\n          <img\r\n            className=\"user-avatar rounded-circle mr-2\"\r\n            src={this.state.userPhoto}\r\n            alt=\"User photo\"\r\n          />{\" \"}\r\n          <span className=\"d-none d-md-inline-block\">\r\n            {this.state.userName}\r\n          </span>\r\n        </DropdownToggle>\r\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\r\n          <DropdownItem tag={Link} to=\"profile\">\r\n            <i className=\"material-icons\">&#xE7FD;</i>{\" \"}\r\n            {profilePageTitle[languageCode]}\r\n          </DropdownItem>\r\n          <DropdownItem tag={Link} to=\"profile-settings\">\r\n            <i className=\"material-icons\">&#xE8B8;</i>{\" \"}\r\n            {profileSettings[languageCode]}{\" \"}\r\n            {/*TODO: to export its data and delete account*/}\r\n          </DropdownItem>\r\n          {/* render admin option only if the user is admin */}\r\n          {this.state.isAdmin ?\r\n            <DropdownItem tag={Link} to=\"admin-settings\">\r\n              <i className=\"material-icons\">vpn_key</i>{\" \"}\r\n              {profileSettingsAdminSectionTitle[languageCode]}{\" \"}\r\n              {/* TODO: export assotiation data */}\r\n            </DropdownItem>\r\n          :\r\n          null}\r\n          <DropdownItem divider />\r\n          <DropdownItem tag={Link} onClick={userLogOut} className=\"text-danger\">\r\n            <i className=\"material-icons text-danger\">&#xE879;</i>{\" \"}\r\n            {profileLogout[languageCode]}\r\n          </DropdownItem>\r\n        </Collapse>\r\n      </NavItem>\r\n    );\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}