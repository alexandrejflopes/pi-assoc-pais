{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\src\\\\App.js\";\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./shards-dashboard/styles/shards-dashboards.1.1.0.min.css\";\nimport { initDoc } from \"./firebase-config\";\nimport { DefaultLayout } from \"./layouts\";\nimport { Container } from \"shards-react\";\n\nvar updateInitialRoute = function updateInitialRoute() {\n  var flag = false;\n  return initDoc.get().then(function (doc) {\n    if (doc.exists === false) {\n      console.log(\"vou devolver /init\");\n      routes[0] = {\n        path: \"/\",\n        exact: true,\n        layout: DefaultLayout,\n        component: function component() {\n          return /*#__PURE__*/React.createElement(Redirect, {\n            to: \"/init\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 28\n            }\n          });\n        }\n      };\n    } else {\n      console.log(\"vou devolver /login\");\n      routes[0] = {\n        path: \"/\",\n        exact: true,\n        layout: DefaultLayout,\n        component: function component() {\n          return /*#__PURE__*/React.createElement(Redirect, {\n            to: \"/login\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 28\n            }\n          });\n        }\n      };\n    }\n\n    flag = true;\n    return true;\n  }).catch(function (err) {\n    console.log(\"Error getting initial doc\"); //alert(err);\n\n    return false;\n  });\n};\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this2;\n\n    _classCallCheck(this, App);\n\n    _this2 = _super.call(this, props);\n    _this2.state = {\n      data: false\n    }; // state antes de fazer a verificacao do doc de instalação\n\n    return _this2;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var self = this;\n      var promise = updateInitialRoute();\n      promise.then(function (result) {\n        /*\r\n         * atualizar para o resultado para o resultado da verificacao\r\n         * neste caso, o resultado é sempre true, já que a verificacao atualizada\r\n         * diretamente o path para o qual vamos fazer redirect */\n        if (result == false) {\n          //Wait x seconds and try again\n          self.componentDidMount();\n        }\n\n        self.setState({\n          data: result\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      //console.log(\"state data antes do render -> \", this.state.data);\n      if (this.state.data) {\n        // se a verificacao ja tiver sido feita, renderizamos a pagina\n        return /*#__PURE__*/React.createElement(Router, {\n          basename: process.env.REACT_APP_BASENAME || \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }\n        }, routes.map(function (route, index) {\n          //console.log(\"index: \", index);\n          //console.log(\"component: \", route.component);\n          return /*#__PURE__*/React.createElement(Route, {\n            key: index,\n            path: route.path,\n            exact: route.exact,\n            component: withTracker(function (props) {\n              return /*#__PURE__*/React.createElement(route.layout, Object.assign({}, props, {\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 23\n                }\n              }), /*#__PURE__*/React.createElement(route.component, Object.assign({}, props, {\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 25\n                }\n              })));\n            }),\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }\n          });\n        })));\n      } else {\n        // enquanto a verificacao nao tiver sido feita, vamos aguardar na Loading page\n        return /*#__PURE__*/React.createElement(Container, {\n          fluid: true,\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignContent: \"center\",\n            alignItems: \"center\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }\n        }, \" \", /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }\n        }, \"A carregar...\"));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/User/Desktop/Ambiente de Trabalho/Universidade/Ano 3/Semestre 2/PI/Projeto/repos/pi-assoc-pais/develop/src/App.js"],"names":["React","BrowserRouter","Router","Redirect","Route","routes","withTracker","initDoc","DefaultLayout","Container","updateInitialRoute","flag","get","then","doc","exists","console","log","path","exact","layout","component","catch","err","App","props","state","data","self","promise","result","componentDidMount","setState","process","env","REACT_APP_BASENAME","map","route","index","display","justifyContent","alignContent","alignItems","position","left","top","transform","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\r\n\r\nimport routes from \"./routes\";\r\nimport withTracker from \"./withTracker\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./shards-dashboard/styles/shards-dashboards.1.1.0.min.css\";\r\n\r\nimport { initDoc } from \"./firebase-config\";\r\nimport { DefaultLayout } from \"./layouts\";\r\nimport { Container } from \"shards-react\";\r\n\r\nconst updateInitialRoute = () => {\r\n  var flag = false;\r\n\r\n  return initDoc\r\n    .get()\r\n    .then((doc) => {\r\n      if (doc.exists === false) {\r\n        console.log(\"vou devolver /init\");\r\n        routes[0] = {\r\n          path: \"/\",\r\n          exact: true,\r\n          layout: DefaultLayout,\r\n          component: () => <Redirect to={\"/init\"} />,\r\n        };\r\n      } else {\r\n        console.log(\"vou devolver /login\");\r\n        routes[0] = {\r\n          path: \"/\",\r\n          exact: true,\r\n          layout: DefaultLayout,\r\n          component: () => <Redirect to={\"/login\"} />,\r\n        };\r\n      }\r\n      flag = true;\r\n\r\n      return true;\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Error getting initial doc\");\r\n      //alert(err);\r\n      return false;\r\n    });\r\n};\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: false }; // state antes de fazer a verificacao do doc de instalação\r\n  }\r\n\r\n  componentDidMount() {\r\n    const self = this;\r\n    const promise = updateInitialRoute();\r\n\r\n    promise.then((result) => {\r\n      /*\r\n       * atualizar para o resultado para o resultado da verificacao\r\n       * neste caso, o resultado é sempre true, já que a verificacao atualizada\r\n       * diretamente o path para o qual vamos fazer redirect */\r\n      if (result == false) {\r\n        //Wait x seconds and try again\r\n        self.componentDidMount();\r\n      }\r\n      self.setState({ data: result });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //console.log(\"state data antes do render -> \", this.state.data);\r\n\r\n    if (this.state.data) {\r\n      // se a verificacao ja tiver sido feita, renderizamos a pagina\r\n      return (\r\n        <Router basename={process.env.REACT_APP_BASENAME || \"\"}>\r\n          <div>\r\n            {routes.map((route, index) => {\r\n              //console.log(\"index: \", index);\r\n              //console.log(\"component: \", route.component);\r\n              return (\r\n                <Route\r\n                  key={index}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  component={withTracker((props) => {\r\n                    return (\r\n                      <route.layout {...props}>\r\n                        <route.component {...props} />\r\n                      </route.layout>\r\n                    );\r\n                  })}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </Router>\r\n      );\r\n    } else {\r\n      // enquanto a verificacao nao tiver sido feita, vamos aguardar na Loading page\r\n      return (\r\n        <Container\r\n          fluid\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            top: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          <h1>A carregar...</h1>\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}