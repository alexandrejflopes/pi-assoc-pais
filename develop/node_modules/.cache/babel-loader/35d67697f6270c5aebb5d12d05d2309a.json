{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\src\\\\components\\\\profile\\\\AdvancedSettings.js\";\nimport React from \"react\";\nimport { Button, Card, CardHeader, Col, Form, FormFeedback, FormGroup, FormInput, FormTextarea, ListGroup, ListGroupItem, Row } from \"shards-react\";\nimport { languageCode, parentsParameters, showToast, toastTypes } from \"../../utils/general_utils\";\nimport { saveChanges, cancel, changeEmail, yes, no, attentionPrompt, updateEmailPrompt } from \"../../utils/common_strings\";\nimport { profileSettingsDataFormTitle } from \"../../utils/page_titles_strings\";\nimport { provideRequiredFieldsMessage, confirmUpdateEmail, genericEmailUpdateErrorMsg, emailAlreadyTaken, parentUpdateSuccess, parentUpdateError, emailUpdateSuccess, confirmLogoutAndNewLink, exportAssocDataOnProcess, changeEmailOnProcess } from \"../../utils/messages_strings\";\nimport { firebase_auth, firebase } from \"../../firebase-config\";\nimport { emailExistsInDB, emailExistsInFBAuth, sendChangeEmailAuth, updateParentEmail, userLogOut } from \"../../firebase_scripts/profile_functions\";\nimport ConfirmationDialog from \"../dialog/ConfirmationDialog\";\nimport AknowledgementDialog from \"../dialog/AknowledgementDialog\";\n\nvar AdvancedSettings = /*#__PURE__*/function (_React$Component) {\n  _inherits(AdvancedSettings, _React$Component);\n\n  var _super = _createSuper(AdvancedSettings);\n\n  function AdvancedSettings(props) {\n    var _this;\n\n    _classCallCheck(this, AdvancedSettings);\n\n    _this = _super.call(this, props);\n    var parent = null;\n    var infoFormTitle = profileSettingsDataFormTitle[languageCode];\n\n    if (_this.props.user != null) {\n      parent = _this.props.user;\n    } //const {phone, nif, email, name, cc, job, street, city} = this.props.user;\n\n\n    _this.state = {\n      title: infoFormTitle,\n      parent: parent,\n      editing: false,\n      disabled: true,\n      // feedbacks\n      feedbacks: _defineProperty({}, parentsParameters.EMAIL[languageCode], false),\n      oldParent: null,\n      dialogOpen: false,\n      emailUpdatedDialogOpen: false,\n      this_: _assertThisInitialized(_this)\n    };\n    _this.handleChangeParam = _this.handleChangeParam.bind(_assertThisInitialized(_this));\n    _this.enableEditableInputs = _this.enableEditableInputs.bind(_assertThisInitialized(_this));\n    _this.disableEditableInputs = _this.disableEditableInputs.bind(_assertThisInitialized(_this));\n    _this.editForm = _this.editForm.bind(_assertThisInitialized(_this));\n    _this.cancelEditing = _this.cancelEditing.bind(_assertThisInitialized(_this));\n    _this.lockFormAfterUpdate = _this.lockFormAfterUpdate.bind(_assertThisInitialized(_this));\n    _this.closeDialog = _this.closeDialog.bind(_assertThisInitialized(_this));\n    _this.openDialog = _this.openDialog.bind(_assertThisInitialized(_this));\n    _this.closeSuccessDialog = _this.closeSuccessDialog.bind(_assertThisInitialized(_this));\n    _this.openSuccessDialog = _this.openSuccessDialog.bind(_assertThisInitialized(_this));\n    _this.updateEmail = _this.updateEmail.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  /*********************************** LIFECYCLE ***********************************/\n\n\n  _createClass(AdvancedSettings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n    /*********************************** HANDLERS ***********************************/\n\n  }, {\n    key: \"updateEmail\",\n    value: function updateEmail(confirmation) {\n      console.log(\"result dialog: \" + confirmation);\n      this.closeDialog();\n      var this_ = this;\n      var validResult = this_.validForm();\n      var localUser = JSON.parse(window.localStorage.getItem(\"userDoc\"));\n      var userName = localUser[parentsParameters.NAME[languageCode]];\n      var currentEmail = localUser[parentsParameters.EMAIL[languageCode]];\n      var newEmail = this_.state.parent[parentsParameters.EMAIL[languageCode]];\n      console.log(\"currentEmail -> \" + currentEmail);\n      console.log(\"newEmail -> \" + newEmail);\n\n      if (!validResult) {\n        showToast(provideRequiredFieldsMessage[languageCode], 5000, toastTypes.ERROR);\n      } // if current and new email are the same, do nothing\n      else if (currentEmail === newEmail) {\n          this_.cancelEditing();\n        } else {\n          //const confirmation = window.confirm(confirmUpdateEmail[languageCode]);\n          if (confirmation) {\n            showToast(changeEmailOnProcess[languageCode], 3000, toastTypes.INFO);\n            var FBuser = firebase_auth.currentUser; // in case of, for some reason, these don't match\n\n            if (currentEmail !== FBuser.email) {\n              showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\n              this_.cancelEditing();\n              return;\n            }\n\n            this_.disableEditableInputs(); // just to check if the current email exists in FB Auth\n            // if so, we can proceed\n\n            emailExistsInFBAuth(currentEmail).then(function (exists) {\n              if (exists) {\n                console.log(\"current existe na Auth\"); // just to check if the current email exists in DB\n                // if so, we can proceed\n\n                emailExistsInDB(currentEmail).then(function (exists) {\n                  if (exists) {\n                    console.log(\"current existe na DB\"); // check if the new email exists in FB Auth (already taken)\n                    // if so, we cannot proceed\n\n                    emailExistsInFBAuth(newEmail).then(function (exists) {\n                      if (!exists) {\n                        console.log(\"newEmail não existe na Auth\"); // just to check if the new email exists in DB (already taken)\n                        // if so, we cannot proceed\n\n                        emailExistsInDB(newEmail).then(function (exists) {\n                          if (!exists) {\n                            console.log(\"newEmail não existe na DB\"); // if all conditions are set, then update email\n\n                            updateParentEmail(currentEmail, newEmail).then(function (result) {\n                              if (result.error == null) {\n                                var upParentString = JSON.stringify(result);\n                                console.log(\"updatedParent recebido depois do update email -> \" + upParentString); // update user data in localstorage\n\n                                window.localStorage.setItem(\"userDoc\", upParentString);\n                                this_.lockFormAfterUpdate();\n                                this_.props.componentDidMount(true);\n                                console.log(\"firebase user (não) atualizado: \" + JSON.stringify(firebase_auth.currentUser)); //showToast(emailUpdateSuccess[languageCode], 5000, toastTypes.SUCCESS);\n\n                                this_.openSuccessDialog();\n                              } else {\n                                console.log(\"result error: \" + JSON.stringify(result));\n                                showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\n                                this_.cancelEditing();\n                              }\n                            }).catch(function (error) {\n                              if (Object.keys(error).length !== 0) {\n                                console.log(\"update error: \" + JSON.stringify(error));\n                                showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\n                                this_.cancelEditing();\n                              }\n                            });\n                          } else {\n                            console.log(\"newEmail já existe na DB\");\n                            showToast(emailAlreadyTaken[languageCode], 5000, toastTypes.ERROR);\n                            this_.cancelEditing();\n                          }\n                        }).catch(function () {\n                          console.log(\"generic error 6\");\n                          showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\n                          this_.cancelEditing();\n                        });\n                      } else {\n                        console.log(\"newEmail já existe na Auth\");\n                        showToast(emailAlreadyTaken[languageCode], 5000, toastTypes.ERROR);\n                        this_.cancelEditing();\n                      }\n                    }).catch(function () {\n                      console.log(\"generic error 5\");\n                      showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\n                      this_.cancelEditing();\n                    });\n                  } else {\n                    console.log(\"generic error 4\");\n                    showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\n                    this_.cancelEditing();\n                  }\n                }).catch(function () {\n                  console.log(\"generic error 3\");\n                  showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\n                  this_.cancelEditing();\n                });\n              } else {\n                console.log(\"generic error 2\");\n                showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\n                this_.cancelEditing();\n              }\n            }).catch(function () {\n              console.log(\"generic error 1\");\n              showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\n              this_.cancelEditing();\n            });\n          } else {\n            this_.closeDialog();\n            this_.cancelEditing();\n          }\n        }\n    }\n  }, {\n    key: \"lockFormAfterUpdate\",\n    value: function lockFormAfterUpdate() {\n      //this.resetFeedbacks();\n      this.disableEditableInputs();\n      this.setState({\n        editing: false\n      }); // save new parent data\n\n      var parent = _objectSpread({}, this.state.parent);\n\n      this.setState({\n        oldParent: parent\n      });\n    }\n  }, {\n    key: \"validForm\",\n    value: function validForm() {\n      // remove all feedbacks at the beginning\n      this.resetFeedbacks(); // check if all inputs are filled\n\n      var changedFeedbacks = _objectSpread({}, this.state.feedbacks);\n\n      var allValid = true;\n\n      for (var field in this.state.feedbacks) {\n        var value = this.state.parent[field];\n\n        if (value == null || value.trim() === \"\") {\n          changedFeedbacks[field] = true;\n          allValid = false;\n        }\n      }\n\n      this.state.feedbacks = changedFeedbacks;\n      this.forceUpdate();\n      return allValid;\n    }\n  }, {\n    key: \"resetFeedbacks\",\n    value: function resetFeedbacks() {\n      var changedFeedbacks = _objectSpread({}, this.state.feedbacks);\n\n      for (var field in changedFeedbacks) {\n        changedFeedbacks[field] = false;\n      }\n\n      this.state.feedbacks = changedFeedbacks;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleChangeParam\",\n    value: function handleChangeParam(e) {\n      var parent = this.state.parent;\n      var paramName = e.target.name; //console.log(\"paramName to change: \" + paramName);\n      // update the param with the new value\n\n      parent[paramName] = e.target.value; //console.log(\"parent with new values: \" + JSON.stringify(parent));\n\n      this.setState({\n        parent: parent\n      });\n    }\n  }, {\n    key: \"savePreviousParentData\",\n    value: function savePreviousParentData() {\n      var parent = _objectSpread({}, this.state.parent);\n\n      this.setState({\n        oldParent: parent\n      }); //console.log(\"parent saved: \" + JSON.stringify(parent));\n    }\n  }, {\n    key: \"restorePreviousParentData\",\n    value: function restorePreviousParentData() {\n      var oldParent = _objectSpread({}, this.state.oldParent);\n\n      this.setState({\n        parent: oldParent\n      }); //console.log(\"parent restored: \" + JSON.stringify(oldParent));\n    }\n  }, {\n    key: \"enableEditableInputs\",\n    value: function enableEditableInputs() {\n      this.setState({\n        disabled: false\n      });\n    }\n  }, {\n    key: \"disableEditableInputs\",\n    value: function disableEditableInputs() {\n      this.setState({\n        disabled: true\n      });\n    }\n  }, {\n    key: \"editForm\",\n    value: function editForm() {\n      this.savePreviousParentData();\n      this.setState({\n        editing: true\n      });\n      this.enableEditableInputs();\n    }\n  }, {\n    key: \"cancelEditing\",\n    value: function cancelEditing() {\n      this.restorePreviousParentData();\n      this.setState({\n        editing: false\n      });\n      this.disableEditableInputs();\n    }\n  }, {\n    key: \"closeDialog\",\n    value: function closeDialog() {\n      this.setState({\n        dialogOpen: false\n      });\n    }\n  }, {\n    key: \"openDialog\",\n    value: function openDialog() {\n      this.setState({\n        dialogOpen: true\n      });\n    }\n  }, {\n    key: \"closeSuccessDialog\",\n    value: function closeSuccessDialog() {\n      //alert(\"close success\");\n      this.setState({\n        emailUpdatedDialogOpen: false\n      });\n    }\n  }, {\n    key: \"openSuccessDialog\",\n    value: function openSuccessDialog() {\n      //alert(\"abrir success\");\n      this.setState({\n        emailUpdatedDialogOpen: true\n      });\n    }\n  }, {\n    key: \"finnishUpdateEmailFlow\",\n    value: function finnishUpdateEmailFlow(parent) {\n      var this_ = parent;\n      this_.closeSuccessDialog();\n      var localUser = JSON.parse(window.localStorage.getItem(\"userDoc\"));\n      var userName = localUser[parentsParameters.NAME[languageCode]];\n      var newEmail = this_.state.parent[parentsParameters.EMAIL[languageCode]];\n      userLogOut();\n      sendChangeEmailAuth(userName, newEmail).then();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Card, {\n        small: true,\n        className: \"mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CardHeader, {\n        className: \"border-bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }\n      }, this.state.title)), /*#__PURE__*/React.createElement(ListGroup, {\n        flush: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItem, {\n        className: \"p-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        form: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"parentEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 23\n        }\n      }, parentsParameters.EMAIL[languageCode]), /*#__PURE__*/React.createElement(FormInput, {\n        required: true,\n        type: \"email\",\n        id: \"parentEmail\",\n        name: parentsParameters.EMAIL[languageCode],\n        placeholder: parentsParameters.EMAIL[languageCode],\n        value: this.state.parent[parentsParameters.EMAIL[languageCode]],\n        onChange: this.handleChangeParam,\n        invalid: this.state.feedbacks[parentsParameters.EMAIL[languageCode]],\n        disabled: this.state.disabled ? \"disabled\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 19\n        }\n      }), this.state.editing ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 42\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        theme: \"danger\",\n        onClick: this.cancelEditing,\n        disabled: this.state.disabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 47\n        }\n      }, cancel[languageCode]), \" \", /*#__PURE__*/React.createElement(Button, {\n        theme: \"success\",\n        className: \"float-right\",\n        onClick: this.openDialog,\n        disabled: this.state.disabled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 162\n        }\n      }, saveChanges[languageCode]), \" \") : /*#__PURE__*/React.createElement(Button, {\n        theme: \"accent\",\n        onClick: this.editForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 23\n        }\n      }, changeEmail[languageCode])))))), this.state.dialogOpen ? /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        open: this.state.dialogOpen,\n        result: this.updateEmail,\n        title: updateEmailPrompt[languageCode],\n        message: confirmUpdateEmail[languageCode],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }\n      }) : null, this.state.emailUpdatedDialogOpen ? /*#__PURE__*/React.createElement(AknowledgementDialog, {\n        open: this.state.emailUpdatedDialogOpen,\n        after: this.finnishUpdateEmailFlow,\n        title: emailUpdateSuccess[languageCode],\n        message: confirmLogoutAndNewLink[languageCode],\n        parent: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }\n      }) : null);\n    }\n  }]);\n\n  return AdvancedSettings;\n}(React.Component);\n\nexport default AdvancedSettings;","map":{"version":3,"sources":["C:/Users/User/Desktop/Ambiente de Trabalho/Universidade/Ano 3/Semestre 2/PI/Projeto/repos/pi-assoc-pais/develop/src/components/profile/AdvancedSettings.js"],"names":["React","Button","Card","CardHeader","Col","Form","FormFeedback","FormGroup","FormInput","FormTextarea","ListGroup","ListGroupItem","Row","languageCode","parentsParameters","showToast","toastTypes","saveChanges","cancel","changeEmail","yes","no","attentionPrompt","updateEmailPrompt","profileSettingsDataFormTitle","provideRequiredFieldsMessage","confirmUpdateEmail","genericEmailUpdateErrorMsg","emailAlreadyTaken","parentUpdateSuccess","parentUpdateError","emailUpdateSuccess","confirmLogoutAndNewLink","exportAssocDataOnProcess","changeEmailOnProcess","firebase_auth","firebase","emailExistsInDB","emailExistsInFBAuth","sendChangeEmailAuth","updateParentEmail","userLogOut","ConfirmationDialog","AknowledgementDialog","AdvancedSettings","props","parent","infoFormTitle","user","state","title","editing","disabled","feedbacks","EMAIL","oldParent","dialogOpen","emailUpdatedDialogOpen","this_","handleChangeParam","bind","enableEditableInputs","disableEditableInputs","editForm","cancelEditing","lockFormAfterUpdate","closeDialog","openDialog","closeSuccessDialog","openSuccessDialog","updateEmail","_isMounted","confirmation","console","log","validResult","validForm","localUser","JSON","parse","window","localStorage","getItem","userName","NAME","currentEmail","newEmail","ERROR","INFO","FBuser","currentUser","email","then","exists","result","error","upParentString","stringify","setItem","componentDidMount","catch","Object","keys","length","setState","resetFeedbacks","changedFeedbacks","allValid","field","value","trim","forceUpdate","e","paramName","target","name","savePreviousParentData","restorePreviousParentData","finnishUpdateEmailFlow","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,GAJF,EAKEC,IALF,EAMEC,YANF,EAOEC,SAPF,EAQEC,SARF,EASEC,YATF,EAUEC,SAVF,EAWEC,aAXF,EAYEC,GAZF,QAaO,cAbP;AAcA,SACEC,YADF,EAEEC,iBAFF,EAEqBC,SAFrB,EAEgCC,UAFhC,QAGO,2BAHP;AAIA,SACEC,WADF,EAEEC,MAFF,EAGEC,WAHF,EAGeC,GAHf,EAGoBC,EAHpB,EAGwBC,eAHxB,EAGyCC,iBAHzC,QAIO,4BAJP;AAKA,SACEC,4BADF,QAEO,iCAFP;AAGA,SACEC,4BADF,EAEEC,kBAFF,EAGEC,0BAHF,EAIEC,iBAJF,EAKEC,mBALF,EAMEC,iBANF,EAOEC,kBAPF,EAQEC,uBARF,EAQ2BC,wBAR3B,EAQqDC,oBARrD,QASO,8BATP;AAUA,SAAQC,aAAR,EAAuBC,QAAvB,QAAsC,uBAAtC;AACA,SACEC,eADF,EAEEC,mBAFF,EAEuBC,mBAFvB,EAE4CC,iBAF5C,EAE+DC,UAF/D,QAGO,0CAHP;AAIA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;;IAGMC,gB;;;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,QAAIC,MAAM,GAAG,IAAb;AACA,QAAMC,aAAa,GAAGvB,4BAA4B,CAACX,YAAD,CAAlD;;AAEA,QAAG,MAAKgC,KAAL,CAAWG,IAAX,IAAiB,IAApB,EAAyB;AACvBF,MAAAA,MAAM,GAAG,MAAKD,KAAL,CAAWG,IAApB;AACD,KARgB,CAUjB;;;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEH,aADI;AAEXD,MAAAA,MAAM,EAAGA,MAFE;AAGXK,MAAAA,OAAO,EAAG,KAHC;AAIXC,MAAAA,QAAQ,EAAE,IAJC;AAKX;AACAC,MAAAA,SAAS,sBACNvC,iBAAiB,CAACwC,KAAlB,CAAwBzC,YAAxB,CADM,EACmC,KADnC,CANE;AASX0C,MAAAA,SAAS,EAAE,IATA;AAUXC,MAAAA,UAAU,EAAG,KAVF;AAWXC,MAAAA,sBAAsB,EAAG,KAXd;AAYXC,MAAAA,KAAK;AAZM,KAAb;AAeA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,+BAAzB;AACA,UAAKC,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BD,IAA1B,+BAA5B;AACA,UAAKE,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BF,IAA3B,+BAA7B;AACA,UAAKG,QAAL,GAAgB,MAAKA,QAAL,CAAcH,IAAd,+BAAhB;AACA,UAAKI,aAAL,GAAqB,MAAKA,aAAL,CAAmBJ,IAAnB,+BAArB;AACA,UAAKK,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBL,IAAzB,+BAA3B;AACA,UAAKM,WAAL,GAAmB,MAAKA,WAAL,CAAiBN,IAAjB,+BAAnB;AACA,UAAKO,UAAL,GAAkB,MAAKA,UAAL,CAAgBP,IAAhB,+BAAlB;AACA,UAAKQ,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBR,IAAxB,+BAA1B;AACA,UAAKS,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBT,IAAvB,+BAAzB;AAEA,UAAKU,WAAL,GAAmB,MAAKA,WAAL,CAAiBV,IAAjB,+BAAnB;AArCiB;AAwClB;AAED;;;;;wCACoB;AAClB,WAAKW,UAAL,GAAkB,IAAlB;AAED;;;2CAEsB;AACrB,WAAKA,UAAL,GAAkB,KAAlB;AACD;AAED;;;;gCAGYC,Y,EAAa;AAEvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBF,YAAhC;AACA,WAAKN,WAAL;AAEA,UAAMR,KAAK,GAAG,IAAd;AACA,UAAMiB,WAAW,GAAGjB,KAAK,CAACkB,SAAN,EAApB;AAEA,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,SAA5B,CAAX,CAAlB;AACA,UAAMC,QAAQ,GAAGN,SAAS,CAAC/D,iBAAiB,CAACsE,IAAlB,CAAuBvE,YAAvB,CAAD,CAA1B;AAEA,UAAMwE,YAAY,GAAGR,SAAS,CAAC/D,iBAAiB,CAACwC,KAAlB,CAAwBzC,YAAxB,CAAD,CAA9B;AACA,UAAMyE,QAAQ,GAAG5B,KAAK,CAACT,KAAN,CAAYH,MAAZ,CAAmBhC,iBAAiB,CAACwC,KAAlB,CAAwBzC,YAAxB,CAAnB,CAAjB;AAEA4D,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBW,YAAjC;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBY,QAA7B;;AAEA,UAAG,CAACX,WAAJ,EAAgB;AACd5D,QAAAA,SAAS,CAACU,4BAA4B,CAACZ,YAAD,CAA7B,EAA6C,IAA7C,EAAmDG,UAAU,CAACuE,KAA9D,CAAT;AACD,OAFD,CAGA;AAHA,WAIK,IAAGF,YAAY,KAAGC,QAAlB,EAA2B;AAC9B5B,UAAAA,KAAK,CAACM,aAAN;AACD,SAFI,MAGD;AACF;AACA,cAAGQ,YAAH,EAAgB;AAEdzD,YAAAA,SAAS,CAACmB,oBAAoB,CAACrB,YAAD,CAArB,EAAqC,IAArC,EAA2CG,UAAU,CAACwE,IAAtD,CAAT;AAEA,gBAAIC,MAAM,GAAGtD,aAAa,CAACuD,WAA3B,CAJc,CAKd;;AACA,gBAAGL,YAAY,KAAGI,MAAM,CAACE,KAAzB,EAA+B;AAC7B5E,cAAAA,SAAS,CAACY,0BAA0B,CAACd,YAAD,CAA3B,EAA2C,IAA3C,EAAiDG,UAAU,CAACuE,KAA5D,CAAT;AACA7B,cAAAA,KAAK,CAACM,aAAN;AACA;AACD;;AAEDN,YAAAA,KAAK,CAACI,qBAAN,GAZc,CAcd;AACA;;AACAxB,YAAAA,mBAAmB,CAAC+C,YAAD,CAAnB,CACGO,IADH,CACQ,UAACC,MAAD,EAAY;AAChB,kBAAGA,MAAH,EAAU;AACRpB,gBAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EADQ,CAER;AACA;;AACArC,gBAAAA,eAAe,CAACgD,YAAD,CAAf,CACGO,IADH,CACQ,UAACC,MAAD,EAAY;AAChB,sBAAGA,MAAH,EAAU;AACRpB,oBAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EADQ,CAGR;AACA;;AACApC,oBAAAA,mBAAmB,CAACgD,QAAD,CAAnB,CACGM,IADH,CACQ,UAACC,MAAD,EAAY;AAChB,0BAAG,CAACA,MAAJ,EAAW;AACTpB,wBAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EADS,CAET;AACA;;AACArC,wBAAAA,eAAe,CAACiD,QAAD,CAAf,CACGM,IADH,CACQ,UAACC,MAAD,EAAY;AAChB,8BAAG,CAACA,MAAJ,EAAW;AACTpB,4BAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EADS,CAET;;AAEAlC,4BAAAA,iBAAiB,CAAC6C,YAAD,EAAeC,QAAf,CAAjB,CACGM,IADH,CACQ,UAACE,MAAD,EAAY;AAChB,kCAAGA,MAAM,CAACC,KAAP,IAAc,IAAjB,EAAsB;AACpB,oCAAMC,cAAc,GAAGlB,IAAI,CAACmB,SAAL,CAAeH,MAAf,CAAvB;AACArB,gCAAAA,OAAO,CAACC,GAAR,CAAY,sDAAsDsB,cAAlE,EAFoB,CAGpB;;AACAhB,gCAAAA,MAAM,CAACC,YAAP,CAAoBiB,OAApB,CAA4B,SAA5B,EAAuCF,cAAvC;AACAtC,gCAAAA,KAAK,CAACO,mBAAN;AACAP,gCAAAA,KAAK,CAACb,KAAN,CAAYsD,iBAAZ,CAA8B,IAA9B;AACA1B,gCAAAA,OAAO,CAACC,GAAR,CAAY,qCAAqCI,IAAI,CAACmB,SAAL,CAAe9D,aAAa,CAACuD,WAA7B,CAAjD,EAPoB,CAQpB;;AACAhC,gCAAAA,KAAK,CAACW,iBAAN;AACD,+BAVD,MAWI;AACFI,gCAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBI,IAAI,CAACmB,SAAL,CAAeH,MAAf,CAA/B;AACA/E,gCAAAA,SAAS,CAACY,0BAA0B,CAACd,YAAD,CAA3B,EAA2C,IAA3C,EAAiDG,UAAU,CAACuE,KAA5D,CAAT;AACA7B,gCAAAA,KAAK,CAACM,aAAN;AACD;AAEF,6BAnBH,EAoBGoC,KApBH,CAoBS,UAACL,KAAD,EAAW;AAChB,kCAAGM,MAAM,CAACC,IAAP,CAAYP,KAAZ,EAAmBQ,MAAnB,KAA4B,CAA/B,EAAiC;AAC/B9B,gCAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBI,IAAI,CAACmB,SAAL,CAAeF,KAAf,CAA/B;AACAhF,gCAAAA,SAAS,CAACY,0BAA0B,CAACd,YAAD,CAA3B,EAA2C,IAA3C,EAAiDG,UAAU,CAACuE,KAA5D,CAAT;AACA7B,gCAAAA,KAAK,CAACM,aAAN;AACD;AACF,6BA1BH;AA2BD,2BA/BD,MAgCI;AACFS,4BAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA3D,4BAAAA,SAAS,CAACa,iBAAiB,CAACf,YAAD,CAAlB,EAAkC,IAAlC,EAAwCG,UAAU,CAACuE,KAAnD,CAAT;AACA7B,4BAAAA,KAAK,CAACM,aAAN;AACD;AACF,yBAvCH,EAwCGoC,KAxCH,CAwCS,YAAM;AACX3B,0BAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA3D,0BAAAA,SAAS,CAACY,0BAA0B,CAACd,YAAD,CAA3B,EAA2C,IAA3C,EAAiDG,UAAU,CAACuE,KAA5D,CAAT;AACA7B,0BAAAA,KAAK,CAACM,aAAN;AACD,yBA5CH;AA6CD,uBAjDD,MAkDI;AACFS,wBAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA3D,wBAAAA,SAAS,CAACa,iBAAiB,CAACf,YAAD,CAAlB,EAAkC,IAAlC,EAAwCG,UAAU,CAACuE,KAAnD,CAAT;AACA7B,wBAAAA,KAAK,CAACM,aAAN;AACD;AACF,qBAzDH,EA0DGoC,KA1DH,CA0DS,YAAM;AACX3B,sBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA3D,sBAAAA,SAAS,CAACY,0BAA0B,CAACd,YAAD,CAA3B,EAA2C,IAA3C,EAAiDG,UAAU,CAACuE,KAA5D,CAAT;AACA7B,sBAAAA,KAAK,CAACM,aAAN;AACD,qBA9DH;AAgED,mBArED,MAsEI;AACFS,oBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA3D,oBAAAA,SAAS,CAACY,0BAA0B,CAACd,YAAD,CAA3B,EAA2C,IAA3C,EAAiDG,UAAU,CAACuE,KAA5D,CAAT;AACA7B,oBAAAA,KAAK,CAACM,aAAN;AACD;AACF,iBA7EH,EA8EGoC,KA9EH,CA8ES,YAAM;AACX3B,kBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA3D,kBAAAA,SAAS,CAACY,0BAA0B,CAACd,YAAD,CAA3B,EAA2C,IAA3C,EAAiDG,UAAU,CAACuE,KAA5D,CAAT;AACA7B,kBAAAA,KAAK,CAACM,aAAN;AACD,iBAlFH;AAmFD,eAvFD,MAwFI;AACFS,gBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA3D,gBAAAA,SAAS,CAACY,0BAA0B,CAACd,YAAD,CAA3B,EAA2C,IAA3C,EAAiDG,UAAU,CAACuE,KAA5D,CAAT;AACA7B,gBAAAA,KAAK,CAACM,aAAN;AACD;AACF,aA/FH,EAgGGoC,KAhGH,CAgGS,YAAM;AACX3B,cAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA3D,cAAAA,SAAS,CAACY,0BAA0B,CAACd,YAAD,CAA3B,EAA2C,IAA3C,EAAiDG,UAAU,CAACuE,KAA5D,CAAT;AACA7B,cAAAA,KAAK,CAACM,aAAN;AACD,aApGH;AAqGD,WArHD,MAsHI;AACFN,YAAAA,KAAK,CAACQ,WAAN;AACAR,YAAAA,KAAK,CAACM,aAAN;AACD;AAGF;AACF;;;0CAGoB;AACnB;AACA,WAAKF,qBAAL;AACA,WAAK0C,QAAL,CAAc;AAAErD,QAAAA,OAAO,EAAE;AAAX,OAAd,EAHmB,CAInB;;AACA,UAAML,MAAM,qBAAO,KAAKG,KAAL,CAAWH,MAAlB,CAAZ;;AACA,WAAK0D,QAAL,CAAc;AAAEjD,QAAAA,SAAS,EAAET;AAAb,OAAd;AACD;;;gCAEU;AACT;AACA,WAAK2D,cAAL,GAFS,CAIT;;AACA,UAAIC,gBAAgB,qBAAO,KAAKzD,KAAL,CAAWI,SAAlB,CAApB;;AACA,UAAIsD,QAAQ,GAAG,IAAf;;AAEA,WAAI,IAAIC,KAAR,IAAiB,KAAK3D,KAAL,CAAWI,SAA5B,EAAsC;AACpC,YAAMwD,KAAK,GAAG,KAAK5D,KAAL,CAAWH,MAAX,CAAkB8D,KAAlB,CAAd;;AACA,YAAGC,KAAK,IAAE,IAAP,IAAeA,KAAK,CAACC,IAAN,OAAe,EAAjC,EAAoC;AAClCJ,UAAAA,gBAAgB,CAACE,KAAD,CAAhB,GAA0B,IAA1B;AACAD,UAAAA,QAAQ,GAAG,KAAX;AACD;AACF;;AAED,WAAK1D,KAAL,CAAWI,SAAX,GAAuBqD,gBAAvB;AACA,WAAKK,WAAL;AACA,aAAOJ,QAAP;AACD;;;qCAEe;AACd,UAAID,gBAAgB,qBAAO,KAAKzD,KAAL,CAAWI,SAAlB,CAApB;;AACA,WAAI,IAAIuD,KAAR,IAAiBF,gBAAjB,EAAkC;AAChCA,QAAAA,gBAAgB,CAACE,KAAD,CAAhB,GAA0B,KAA1B;AACD;;AACD,WAAK3D,KAAL,CAAWI,SAAX,GAAuBqD,gBAAvB;AACA,WAAKK,WAAL;AACD;;;sCAEiBC,C,EAAG;AACnB,UAAIlE,MAAM,GAAG,KAAKG,KAAL,CAAWH,MAAxB;AACA,UAAImE,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASC,IAAzB,CAFmB,CAGnB;AACA;;AACArE,MAAAA,MAAM,CAACmE,SAAD,CAAN,GAAoBD,CAAC,CAACE,MAAF,CAASL,KAA7B,CALmB,CAMnB;;AACA,WAAKL,QAAL,CAAc;AAAE1D,QAAAA,MAAM,EAAEA;AAAV,OAAd;AACD;;;6CAEwB;AACvB,UAAMA,MAAM,qBAAO,KAAKG,KAAL,CAAWH,MAAlB,CAAZ;;AACA,WAAK0D,QAAL,CAAc;AAAEjD,QAAAA,SAAS,EAAET;AAAb,OAAd,EAFuB,CAGvB;AACD;;;gDAE2B;AAC1B,UAAMS,SAAS,qBAAO,KAAKN,KAAL,CAAWM,SAAlB,CAAf;;AACA,WAAKiD,QAAL,CAAc;AAAE1D,QAAAA,MAAM,EAAES;AAAV,OAAd,EAF0B,CAG1B;AACD;;;2CAEsB;AACrB,WAAKiD,QAAL,CAAc;AAAEpD,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD;;;4CAEuB;AACtB,WAAKoD,QAAL,CAAc;AAAEpD,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD;;;+BAES;AACR,WAAKgE,sBAAL;AACA,WAAKZ,QAAL,CAAc;AAACrD,QAAAA,OAAO,EAAG;AAAX,OAAd;AACA,WAAKU,oBAAL;AACD;;;oCAEe;AACd,WAAKwD,yBAAL;AACA,WAAKb,QAAL,CAAc;AAAErD,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,WAAKW,qBAAL;AACD;;;kCAGa;AACZ,WAAK0C,QAAL,CAAc;AAAChD,QAAAA,UAAU,EAAG;AAAd,OAAd;AACD;;;iCAEY;AACX,WAAKgD,QAAL,CAAc;AAAChD,QAAAA,UAAU,EAAG;AAAd,OAAd;AACD;;;yCAEoB;AACnB;AACA,WAAKgD,QAAL,CAAc;AAAC/C,QAAAA,sBAAsB,EAAG;AAA1B,OAAd;AACD;;;wCAEmB;AAClB;AACA,WAAK+C,QAAL,CAAc;AAAC/C,QAAAA,sBAAsB,EAAG;AAA1B,OAAd;AACD;;;2CAEsBX,M,EAAO;AAC5B,UAAMY,KAAK,GAAGZ,MAAd;AACAY,MAAAA,KAAK,CAACU,kBAAN;AACA,UAAMS,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,SAA5B,CAAX,CAAlB;AACA,UAAMC,QAAQ,GAAGN,SAAS,CAAC/D,iBAAiB,CAACsE,IAAlB,CAAuBvE,YAAvB,CAAD,CAA1B;AACA,UAAMyE,QAAQ,GAAG5B,KAAK,CAACT,KAAN,CAAYH,MAAZ,CAAmBhC,iBAAiB,CAACwC,KAAlB,CAAwBzC,YAAxB,CAAnB,CAAjB;AACA4B,MAAAA,UAAU;AACVF,MAAAA,mBAAmB,CAAC4C,QAAD,EAAWG,QAAX,CAAnB,CAAwCM,IAAxC;AACD;;;6BAIQ;AACP,0BACE,oBAAC,IAAD;AAAM,QAAA,KAAK,MAAX;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqB,KAAK3C,KAAL,CAAWC,KAAhC,CADF,CADF,eAIE,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AAAe,QAAA,SAAS,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,GAAD;AAAK,QAAA,IAAI,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAa,QAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BpC,iBAAiB,CAACwC,KAAlB,CAAwBzC,YAAxB,CAA9B,CADF,eAEE,oBAAC,SAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,EAAE,EAAC,aAHL;AAIE,QAAA,IAAI,EAAEC,iBAAiB,CAACwC,KAAlB,CAAwBzC,YAAxB,CAJR;AAKE,QAAA,WAAW,EAAEC,iBAAiB,CAACwC,KAAlB,CAAwBzC,YAAxB,CALf;AAME,QAAA,KAAK,EACH,KAAKoC,KAAL,CAAWH,MAAX,CAAkBhC,iBAAiB,CAACwC,KAAlB,CAAwBzC,YAAxB,CAAlB,CAPJ;AASE,QAAA,QAAQ,EAAE,KAAK8C,iBATjB;AAUE,QAAA,OAAO,EAAE,KAAKV,KAAL,CAAWI,SAAX,CAAqBvC,iBAAiB,CAACwC,KAAlB,CAAwBzC,YAAxB,CAArB,CAVX;AAWE,QAAA,QAAQ,EAAE,KAAKoC,KAAL,CAAWG,QAAX,GAAsB,UAAtB,GAAmC,EAX/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFF,CADF,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBF,EAsBI,KAAKH,KAAL,CAAWE,OAAX,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAK,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,OAAO,EAAE,KAAKa,aAArC;AAAoD,QAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWG,QAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoFlC,MAAM,CAACL,YAAD,CAA1F,CAAL,oBAAwH,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAgD,QAAA,OAAO,EAAE,KAAKsD,UAA9D;AAA0E,QAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWG,QAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0GnC,WAAW,CAACJ,YAAD,CAArH,CAAxH,MAArB,gBACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,OAAO,EAAE,KAAKkD,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgD5C,WAAW,CAACN,YAAD,CAA3D,CAvBN,CADF,CADF,CADF,CADF,CAJF,EAuCG,KAAKoC,KAAL,CAAWO,UAAX,gBACC,oBAAC,kBAAD;AACE,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWO,UADnB;AAEE,QAAA,MAAM,EAAE,KAAKc,WAFf;AAGE,QAAA,KAAK,EAAE/C,iBAAiB,CAACV,YAAD,CAH1B;AAIE,QAAA,OAAO,EAAEa,kBAAkB,CAACb,YAAD,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAMG,IA7CN,EA+CG,KAAKoC,KAAL,CAAWQ,sBAAX,gBACC,oBAAC,oBAAD;AACE,QAAA,IAAI,EAAE,KAAKR,KAAL,CAAWQ,sBADnB;AAEE,QAAA,KAAK,EAAE,KAAK6D,sBAFd;AAGE,QAAA,KAAK,EAAEvF,kBAAkB,CAAClB,YAAD,CAH3B;AAIE,QAAA,OAAO,EAAEmB,uBAAuB,CAACnB,YAAD,CAJlC;AAKE,QAAA,MAAM,EAAE,IALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAOG,IAtDN,CADF;AA4DD;;;;EA/X4Bb,KAAK,CAACuH,S;;AAsYrC,eAAe3E,gBAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Col,\r\n  Form,\r\n  FormFeedback,\r\n  FormGroup,\r\n  FormInput,\r\n  FormTextarea,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row\r\n} from \"shards-react\";\r\nimport {\r\n  languageCode,\r\n  parentsParameters, showToast, toastTypes\r\n} from \"../../utils/general_utils\";\r\nimport {\r\n  saveChanges,\r\n  cancel,\r\n  changeEmail, yes, no, attentionPrompt, updateEmailPrompt\r\n} from \"../../utils/common_strings\";\r\nimport {\r\n  profileSettingsDataFormTitle\r\n} from \"../../utils/page_titles_strings\";\r\nimport {\r\n  provideRequiredFieldsMessage,\r\n  confirmUpdateEmail,\r\n  genericEmailUpdateErrorMsg,\r\n  emailAlreadyTaken,\r\n  parentUpdateSuccess,\r\n  parentUpdateError,\r\n  emailUpdateSuccess,\r\n  confirmLogoutAndNewLink, exportAssocDataOnProcess, changeEmailOnProcess\r\n} from \"../../utils/messages_strings\";\r\nimport {firebase_auth, firebase} from \"../../firebase-config\";\r\nimport {\r\n  emailExistsInDB,\r\n  emailExistsInFBAuth, sendChangeEmailAuth, updateParentEmail, userLogOut\r\n} from \"../../firebase_scripts/profile_functions\";\r\nimport ConfirmationDialog from \"../dialog/ConfirmationDialog\";\r\nimport AknowledgementDialog from \"../dialog/AknowledgementDialog\";\r\n\r\n\r\nclass AdvancedSettings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let parent = null;\r\n    const infoFormTitle = profileSettingsDataFormTitle[languageCode];\r\n\r\n    if(this.props.user!=null){\r\n      parent = this.props.user;\r\n    }\r\n\r\n    //const {phone, nif, email, name, cc, job, street, city} = this.props.user;\r\n    this.state = {\r\n      title: infoFormTitle,\r\n      parent : parent,\r\n      editing : false,\r\n      disabled: true,\r\n      // feedbacks\r\n      feedbacks : {\r\n        [parentsParameters.EMAIL[languageCode]] : false,\r\n      },\r\n      oldParent: null,\r\n      dialogOpen : false,\r\n      emailUpdatedDialogOpen : false,\r\n      this_ : this\r\n    };\r\n\r\n    this.handleChangeParam = this.handleChangeParam.bind(this);\r\n    this.enableEditableInputs = this.enableEditableInputs.bind(this);\r\n    this.disableEditableInputs = this.disableEditableInputs.bind(this);\r\n    this.editForm = this.editForm.bind(this);\r\n    this.cancelEditing = this.cancelEditing.bind(this);\r\n    this.lockFormAfterUpdate = this.lockFormAfterUpdate.bind(this);\r\n    this.closeDialog = this.closeDialog.bind(this);\r\n    this.openDialog = this.openDialog.bind(this);\r\n    this.closeSuccessDialog = this.closeSuccessDialog.bind(this);\r\n    this.openSuccessDialog = this.openSuccessDialog.bind(this);\r\n\r\n    this.updateEmail = this.updateEmail.bind(this);\r\n\r\n\r\n  }\r\n\r\n  /*********************************** LIFECYCLE ***********************************/\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  /*********************************** HANDLERS ***********************************/\r\n\r\n\r\n  updateEmail(confirmation){\r\n\r\n    console.log(\"result dialog: \" + confirmation);\r\n    this.closeDialog();\r\n\r\n    const this_ = this;\r\n    const validResult = this_.validForm();\r\n\r\n    const localUser = JSON.parse(window.localStorage.getItem(\"userDoc\"));\r\n    const userName = localUser[parentsParameters.NAME[languageCode]];\r\n\r\n    const currentEmail = localUser[parentsParameters.EMAIL[languageCode]];\r\n    const newEmail = this_.state.parent[parentsParameters.EMAIL[languageCode]];\r\n\r\n    console.log(\"currentEmail -> \" + currentEmail);\r\n    console.log(\"newEmail -> \" + newEmail);\r\n\r\n    if(!validResult){\r\n      showToast(provideRequiredFieldsMessage[languageCode], 5000, toastTypes.ERROR);\r\n    }\r\n    // if current and new email are the same, do nothing\r\n    else if(currentEmail===newEmail){\r\n      this_.cancelEditing();\r\n    }\r\n    else{\r\n      //const confirmation = window.confirm(confirmUpdateEmail[languageCode]);\r\n      if(confirmation){\r\n\r\n        showToast(changeEmailOnProcess[languageCode], 3000, toastTypes.INFO);\r\n\r\n        let FBuser = firebase_auth.currentUser;\r\n        // in case of, for some reason, these don't match\r\n        if(currentEmail!==FBuser.email){\r\n          showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\r\n          this_.cancelEditing();\r\n          return;\r\n        }\r\n\r\n        this_.disableEditableInputs();\r\n\r\n        // just to check if the current email exists in FB Auth\r\n        // if so, we can proceed\r\n        emailExistsInFBAuth(currentEmail)\r\n          .then((exists) => {\r\n            if(exists){\r\n              console.log(\"current existe na Auth\");\r\n              // just to check if the current email exists in DB\r\n              // if so, we can proceed\r\n              emailExistsInDB(currentEmail)\r\n                .then((exists) => {\r\n                  if(exists){\r\n                    console.log(\"current existe na DB\");\r\n\r\n                    // check if the new email exists in FB Auth (already taken)\r\n                    // if so, we cannot proceed\r\n                    emailExistsInFBAuth(newEmail)\r\n                      .then((exists) => {\r\n                        if(!exists){\r\n                          console.log(\"newEmail não existe na Auth\");\r\n                          // just to check if the new email exists in DB (already taken)\r\n                          // if so, we cannot proceed\r\n                          emailExistsInDB(newEmail)\r\n                            .then((exists) => {\r\n                              if(!exists){\r\n                                console.log(\"newEmail não existe na DB\");\r\n                                // if all conditions are set, then update email\r\n\r\n                                updateParentEmail(currentEmail, newEmail)\r\n                                  .then((result) => {\r\n                                    if(result.error==null){\r\n                                      const upParentString = JSON.stringify(result);\r\n                                      console.log(\"updatedParent recebido depois do update email -> \" + upParentString);\r\n                                      // update user data in localstorage\r\n                                      window.localStorage.setItem(\"userDoc\", upParentString);\r\n                                      this_.lockFormAfterUpdate();\r\n                                      this_.props.componentDidMount(true);\r\n                                      console.log(\"firebase user (não) atualizado: \" + JSON.stringify(firebase_auth.currentUser));\r\n                                      //showToast(emailUpdateSuccess[languageCode], 5000, toastTypes.SUCCESS);\r\n                                      this_.openSuccessDialog();\r\n                                    }\r\n                                    else{\r\n                                      console.log(\"result error: \" + JSON.stringify(result));\r\n                                      showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\r\n                                      this_.cancelEditing();\r\n                                    }\r\n\r\n                                  })\r\n                                  .catch((error) => {\r\n                                    if(Object.keys(error).length!==0){\r\n                                      console.log(\"update error: \" + JSON.stringify(error));\r\n                                      showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\r\n                                      this_.cancelEditing();\r\n                                    }\r\n                                  });\r\n                              }\r\n                              else{\r\n                                console.log(\"newEmail já existe na DB\");\r\n                                showToast(emailAlreadyTaken[languageCode], 5000, toastTypes.ERROR);\r\n                                this_.cancelEditing();\r\n                              }\r\n                            })\r\n                            .catch(() => {\r\n                              console.log(\"generic error 6\");\r\n                              showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\r\n                              this_.cancelEditing();\r\n                            });\r\n                        }\r\n                        else{\r\n                          console.log(\"newEmail já existe na Auth\");\r\n                          showToast(emailAlreadyTaken[languageCode], 5000, toastTypes.ERROR);\r\n                          this_.cancelEditing();\r\n                        }\r\n                      })\r\n                      .catch(() => {\r\n                        console.log(\"generic error 5\");\r\n                        showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\r\n                        this_.cancelEditing();\r\n                      });\r\n\r\n                  }\r\n                  else{\r\n                    console.log(\"generic error 4\");\r\n                    showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\r\n                    this_.cancelEditing();\r\n                  }\r\n                })\r\n                .catch(() => {\r\n                  console.log(\"generic error 3\");\r\n                  showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\r\n                  this_.cancelEditing();\r\n                });\r\n            }\r\n            else{\r\n              console.log(\"generic error 2\");\r\n              showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\r\n              this_.cancelEditing();\r\n            }\r\n          })\r\n          .catch(() => {\r\n            console.log(\"generic error 1\");\r\n            showToast(genericEmailUpdateErrorMsg[languageCode], 5000, toastTypes.ERROR);\r\n            this_.cancelEditing();\r\n          });\r\n      }\r\n      else{\r\n        this_.closeDialog();\r\n        this_.cancelEditing();\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n\r\n\r\n  lockFormAfterUpdate(){\r\n    //this.resetFeedbacks();\r\n    this.disableEditableInputs();\r\n    this.setState({ editing: false });\r\n    // save new parent data\r\n    const parent = {...this.state.parent};\r\n    this.setState({ oldParent: parent });\r\n  }\r\n\r\n  validForm(){\r\n    // remove all feedbacks at the beginning\r\n    this.resetFeedbacks();\r\n\r\n    // check if all inputs are filled\r\n    let changedFeedbacks = {...this.state.feedbacks};\r\n    let allValid = true;\r\n\r\n    for(let field in this.state.feedbacks){\r\n      const value = this.state.parent[field];\r\n      if(value==null || value.trim()===\"\"){\r\n        changedFeedbacks[field] = true;\r\n        allValid = false;\r\n      }\r\n    }\r\n\r\n    this.state.feedbacks = changedFeedbacks;\r\n    this.forceUpdate();\r\n    return allValid;\r\n  }\r\n\r\n  resetFeedbacks(){\r\n    let changedFeedbacks = {...this.state.feedbacks};\r\n    for(let field in changedFeedbacks){\r\n      changedFeedbacks[field] = false;\r\n    }\r\n    this.state.feedbacks = changedFeedbacks;\r\n    this.forceUpdate();\r\n  }\r\n\r\n  handleChangeParam(e) {\r\n    let parent = this.state.parent;\r\n    let paramName = e.target.name;\r\n    //console.log(\"paramName to change: \" + paramName);\r\n    // update the param with the new value\r\n    parent[paramName] = e.target.value;\r\n    //console.log(\"parent with new values: \" + JSON.stringify(parent));\r\n    this.setState({ parent: parent });\r\n  }\r\n\r\n  savePreviousParentData() {\r\n    const parent = {...this.state.parent};\r\n    this.setState({ oldParent: parent });\r\n    //console.log(\"parent saved: \" + JSON.stringify(parent));\r\n  };\r\n\r\n  restorePreviousParentData() {\r\n    const oldParent = {...this.state.oldParent};\r\n    this.setState({ parent: oldParent });\r\n    //console.log(\"parent restored: \" + JSON.stringify(oldParent));\r\n  };\r\n\r\n  enableEditableInputs() {\r\n    this.setState({ disabled: false });\r\n  }\r\n\r\n  disableEditableInputs() {\r\n    this.setState({ disabled: true });\r\n  }\r\n\r\n  editForm(){\r\n    this.savePreviousParentData();\r\n    this.setState({editing : true});\r\n    this.enableEditableInputs();\r\n  }\r\n\r\n  cancelEditing() {\r\n    this.restorePreviousParentData();\r\n    this.setState({ editing: false });\r\n    this.disableEditableInputs();\r\n  }\r\n\r\n\r\n  closeDialog() {\r\n    this.setState({dialogOpen : false});\r\n  }\r\n\r\n  openDialog() {\r\n    this.setState({dialogOpen : true});\r\n  }\r\n\r\n  closeSuccessDialog() {\r\n    //alert(\"close success\");\r\n    this.setState({emailUpdatedDialogOpen : false});\r\n  }\r\n\r\n  openSuccessDialog() {\r\n    //alert(\"abrir success\");\r\n    this.setState({emailUpdatedDialogOpen : true});\r\n  }\r\n\r\n  finnishUpdateEmailFlow(parent){\r\n    const this_ = parent;\r\n    this_.closeSuccessDialog();\r\n    const localUser = JSON.parse(window.localStorage.getItem(\"userDoc\"));\r\n    const userName = localUser[parentsParameters.NAME[languageCode]];\r\n    const newEmail = this_.state.parent[parentsParameters.EMAIL[languageCode]];\r\n    userLogOut();\r\n    sendChangeEmailAuth(userName, newEmail).then();\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Card small className=\"mb-4\">\r\n        <CardHeader className=\"border-bottom\">\r\n          <h6 className=\"m-0\">{this.state.title}</h6>\r\n        </CardHeader>\r\n        <ListGroup flush>\r\n          <ListGroupItem className=\"p-3\">\r\n            <Row>\r\n              <Col>\r\n                <Form>\r\n                  <Row form>\r\n                    {/* Email */}\r\n                    <Col md=\"12\" className=\"form-group\">\r\n                      <label htmlFor=\"parentEmail\">{parentsParameters.EMAIL[languageCode]}</label>\r\n                      <FormInput\r\n                        required\r\n                        type=\"email\"\r\n                        id=\"parentEmail\"\r\n                        name={parentsParameters.EMAIL[languageCode]}\r\n                        placeholder={parentsParameters.EMAIL[languageCode]}\r\n                        value={\r\n                          this.state.parent[parentsParameters.EMAIL[languageCode]]\r\n                        }\r\n                        onChange={this.handleChangeParam}\r\n                        invalid={this.state.feedbacks[parentsParameters.EMAIL[languageCode]]}\r\n                        disabled={this.state.disabled ? \"disabled\" : \"\"}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <hr />\r\n\r\n                  { this.state.editing ? <div><Button theme=\"danger\" onClick={this.cancelEditing} disabled={this.state.disabled}>{cancel[languageCode]}</Button> <Button theme=\"success\" className=\"float-right\" onClick={this.openDialog} disabled={this.state.disabled}>{saveChanges[languageCode]}</Button> </div>\r\n                    : <Button theme=\"accent\" onClick={this.editForm}>{changeEmail[languageCode]}</Button>\r\n                  }\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </ListGroupItem>\r\n        </ListGroup>\r\n\r\n        {this.state.dialogOpen ?\r\n          <ConfirmationDialog\r\n            open={this.state.dialogOpen}\r\n            result={this.updateEmail}\r\n            title={updateEmailPrompt[languageCode]}\r\n            message={confirmUpdateEmail[languageCode]}/>\r\n          : null}\r\n\r\n        {this.state.emailUpdatedDialogOpen ?\r\n          <AknowledgementDialog\r\n            open={this.state.emailUpdatedDialogOpen}\r\n            after={this.finnishUpdateEmailFlow}\r\n            title={emailUpdateSuccess[languageCode]}\r\n            message={confirmLogoutAndNewLink[languageCode]}\r\n            parent={this}/>\r\n          : null}\r\n\r\n      </Card>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default AdvancedSettings;\r\n"]},"metadata":{},"sourceType":"module"}