{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\User\\\\Desktop\\\\Ambiente de Trabalho\\\\Universidade\\\\Ano 3\\\\Semestre 2\\\\PI\\\\Projeto\\\\repos\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { firebaseConfig, firestore, storageRef } from \"../firebase-config\";\nimport React from \"react\";\nimport { languageCode, parentsParameters } from \"../utils/general_utils\";\n\nfunction checkEmailUsage(email) {\n  var project_id = firebaseConfig.projectId;\n  var uri = \"https://us-central1-\" + project_id + \".cloudfunctions.net/api/getParent?\" + \"id=\" + email;\n\n  var request = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var exists;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              exists = false;\n              _context.next = 3;\n              return fetch(uri).then(function (resp) {\n                return resp.json();\n              }) // Transform the data into blob / file\n              .then(function (resp) {\n                console.log(\"email check resp -> \" + JSON.stringify(resp)); // if no error, then exists an account with that email\n\n                if (resp.error == null) {\n                  console.log(\"exists email\");\n                  exists = true;\n                } // when error, then no account with that email\n                else {\n                    console.log(\"do not exists email\");\n                    exists = false;\n                  }\n              }).catch(function (error) {\n                exists = null;\n                console.log(\"Delete case error: \" + error);\n              });\n\n            case 3:\n              return _context.abrupt(\"return\", exists);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function request() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return request();\n}\n\nexport { checkEmailUsage };","map":{"version":3,"sources":["C:/Users/User/Desktop/Ambiente de Trabalho/Universidade/Ano 3/Semestre 2/PI/Projeto/repos/pi-assoc-pais/develop/src/firebase_scripts/registo.js"],"names":["firebaseConfig","firestore","storageRef","React","languageCode","parentsParameters","checkEmailUsage","email","project_id","projectId","uri","request","exists","fetch","then","resp","json","console","log","JSON","stringify","error","catch"],"mappings":";;AAAA,SAAQA,cAAR,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAoD,oBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,EAAsBC,iBAAtB,QAA8C,wBAA9C;;AAGA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAE9B,MAAMC,UAAU,GAAGR,cAAc,CAACS,SAAlC;AACA,MAAIC,GAAG,GACL,yBACAF,UADA,GAEA,oCAFA,GAGA,KAHA,GAGQD,KAJV;;AAMA,MAAMI,OAAO;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,cAAAA,MADU,GACD,KADC;AAAA;AAAA,qBAERC,KAAK,CAACH,GAAD,CAAL,CACHI,IADG,CACE,UAACC,IAAD;AAAA,uBAAUA,IAAI,CAACC,IAAL,EAAV;AAAA,eADF,EACyB;AADzB,eAEHF,IAFG,CAEE,UAAUC,IAAV,EAAgB;AACpBE,gBAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAArC,EADoB,CAEpB;;AACA,oBAAGA,IAAI,CAACM,KAAL,IAAY,IAAf,EAAoB;AAClBJ,kBAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAN,kBAAAA,MAAM,GAAG,IAAT;AACD,iBAHD,CAIA;AAJA,qBAKI;AACFK,oBAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAN,oBAAAA,MAAM,GAAG,KAAT;AACD;AACF,eAdG,EAeHU,KAfG,CAeG,UAAUD,KAAV,EAAiB;AACtBT,gBAAAA,MAAM,GAAG,IAAT;AACAK,gBAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBG,KAApC;AACD,eAlBG,CAFQ;;AAAA;AAAA,+CAsBPT,MAtBO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPD,OAAO;AAAA;AAAA;AAAA,KAAb;;AAyBA,SAAOA,OAAO,EAAd;AAED;;AAGD,SAAQL,eAAR","sourcesContent":["import {firebaseConfig, firestore, storageRef} from \"../firebase-config\";\r\nimport React from \"react\";\r\nimport {languageCode, parentsParameters} from \"../utils/general_utils\";\r\n\r\n\r\nfunction checkEmailUsage(email) {\r\n\r\n  const project_id = firebaseConfig.projectId;\r\n  let uri =\r\n    \"https://us-central1-\" +\r\n    project_id +\r\n    \".cloudfunctions.net/api/getParent?\" +\r\n    \"id=\" + email;\r\n\r\n  const request = async () => {\r\n    let exists = false;\r\n    await fetch(uri)\r\n      .then((resp) => resp.json()) // Transform the data into blob / file\r\n      .then(function (resp) {\r\n        console.log(\"email check resp -> \" + JSON.stringify(resp));\r\n        // if no error, then exists an account with that email\r\n        if(resp.error==null){\r\n          console.log(\"exists email\");\r\n          exists = true;\r\n        }\r\n        // when error, then no account with that email\r\n        else{\r\n          console.log(\"do not exists email\");\r\n          exists = false;\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        exists = null;\r\n        console.log(\"Delete case error: \" + error);\r\n      });\r\n\r\n    return exists;\r\n  };\r\n\r\n  return request();\r\n\r\n}\r\n\r\n\r\nexport {checkEmailUsage}\r\n"]},"metadata":{},"sourceType":"module"}