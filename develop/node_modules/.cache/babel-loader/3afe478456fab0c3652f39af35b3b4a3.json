{"ast":null,"code":"import _objectSpread from \"D:\\\\Github\\\\pi-assoc-pais\\\\develop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\Github\\\\pi-assoc-pais\\\\develop\\\\src\\\\components\\\\common\\\\SmallStats.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport shortid from \"shortid\";\nimport { Card, CardBody } from \"shards-react\";\nimport Chart from \"../../utils/chart\";\n\nclass SmallStats extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const chartOptions = _objectSpread({}, {\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n        display: false\n      },\n      tooltips: {\n        enabled: false,\n        custom: false\n      },\n      elements: {\n        point: {\n          radius: 0\n        },\n        line: {\n          tension: 0.33\n        }\n      },\n      scales: {\n        xAxes: [{\n          gridLines: false,\n          ticks: {\n            display: false\n          }\n        }],\n        yAxes: [{\n          gridLines: false,\n          scaleLabel: false,\n          ticks: {\n            display: false,\n            isplay: false,\n            // Avoid getting the graph line cut of at the top of the canvas.\n            // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n            suggestedMax: Math.max(...this.props.chartData[0].data) + 1\n          }\n        }]\n      }\n    }, {}, this.props.chartOptions);\n\n    const chartConfig = _objectSpread({}, {\n      type: \"line\",\n      data: _objectSpread({}, {\n        labels: this.props.chartLabels\n      }, {}, {\n        datasets: this.props.chartData\n      }),\n      options: chartOptions\n    }, {}, this.props.chartConfig);\n\n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const _this$props = this.props,\n          variation = _this$props.variation,\n          label = _this$props.label,\n          value = _this$props.value,\n          percentage = _this$props.percentage,\n          increase = _this$props.increase;\n    const cardClasses = classNames(\"stats-small\", variation && \"stats-small--\".concat(variation));\n    const cardBodyClasses = classNames(variation === \"1\" ? \"p-0 d-flex\" : \"px-0 pb-0\");\n    const innerWrapperClasses = classNames(\"d-flex\", variation === \"1\" ? \"flex-column m-auto\" : \"px-3\");\n    const dataFieldClasses = classNames(\"stats-small__data\", variation === \"1\" && \"text-center\");\n    const labelClasses = classNames(\"stats-small__label\", \"text-uppercase\", variation !== \"1\" && \"mb-1\");\n    const valueClasses = classNames(\"stats-small__value\", \"count\", variation === \"1\" ? \"my-3\" : \"m-0\");\n    const innerDataFieldClasses = classNames(\"stats-small__data\", variation !== \"1\" && \"text-right align-items-center\");\n    const percentageClasses = classNames(\"stats-small__percentage\", \"stats-small__percentage--\".concat(increase ? \"increase\" : \"decrease\"));\n    const canvasHeight = variation === \"1\" ? 120 : 60;\n    return React.createElement(Card, {\n      small: true,\n      className: cardClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      className: cardBodyClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: innerWrapperClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: dataFieldClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: labelClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, label), React.createElement(\"h6\", {\n      className: valueClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, value)), React.createElement(\"div\", {\n      className: innerDataFieldClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: percentageClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, percentage))), React.createElement(\"canvas\", {\n      height: canvasHeight,\n      ref: this.canvasRef,\n      className: \"stats-small-\".concat(shortid()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })));\n  }\n\n}\n\nSmallStats.propTypes = {\n  /**\r\n   * The Small Stats variation.\r\n   */\n  variation: PropTypes.string,\n\n  /**\r\n   * The label.\r\n   */\n  label: PropTypes.string,\n\n  /**\r\n   * The value.\r\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\r\n   * The percentage number or string.\r\n   */\n  percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\r\n   * Whether is a value increase, or not.\r\n   */\n  increase: PropTypes.bool,\n\n  /**\r\n   * The Chart.js configuration object.\r\n   */\n  chartConfig: PropTypes.object,\n\n  /**\r\n   * The Chart.js options object.\r\n   */\n  chartOptions: PropTypes.object,\n\n  /**\r\n   * The chart data.\r\n   */\n  chartData: PropTypes.array.isRequired,\n\n  /**\r\n   * The chart labels.\r\n   */\n  chartLabels: PropTypes.array\n};\nSmallStats.defaultProps = {\n  increase: true,\n  percentage: 0,\n  value: 0,\n  label: \"Label\",\n  chartOptions: Object.create(null),\n  chartConfig: Object.create(null),\n  chartData: [],\n  chartLabels: []\n};\nexport default SmallStats;","map":{"version":3,"sources":["D:/Github/pi-assoc-pais/develop/src/components/common/SmallStats.js"],"names":["React","PropTypes","classNames","shortid","Card","CardBody","Chart","SmallStats","Component","constructor","props","canvasRef","createRef","componentDidMount","chartOptions","maintainAspectRatio","responsive","legend","display","tooltips","enabled","custom","elements","point","radius","line","tension","scales","xAxes","gridLines","ticks","yAxes","scaleLabel","isplay","suggestedMax","Math","max","chartData","data","chartConfig","type","labels","chartLabels","datasets","options","current","render","variation","label","value","percentage","increase","cardClasses","cardBodyClasses","innerWrapperClasses","dataFieldClasses","labelClasses","valueClasses","innerDataFieldClasses","percentageClasses","canvasHeight","propTypes","string","oneOfType","number","bool","object","array","isRequired","defaultProps","Object","create"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport shortid from \"shortid\";\r\nimport { Card, CardBody } from \"shards-react\";\r\n\r\nimport Chart from \"../../utils/chart\";\r\n\r\nclass SmallStats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.canvasRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const chartOptions = {\r\n      ...{\r\n        maintainAspectRatio: true,\r\n        responsive: true,\r\n        legend: {\r\n          display: false\r\n        },\r\n        tooltips: {\r\n          enabled: false,\r\n          custom: false\r\n        },\r\n        elements: {\r\n          point: {\r\n            radius: 0\r\n          },\r\n          line: {\r\n            tension: 0.33\r\n          }\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              gridLines: false,\r\n              ticks: {\r\n                display: false\r\n              }\r\n            }\r\n          ],\r\n          yAxes: [\r\n            {\r\n              gridLines: false,\r\n              scaleLabel: false,\r\n              ticks: {\r\n                display: false,\r\n                isplay: false,\r\n                // Avoid getting the graph line cut of at the top of the canvas.\r\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\r\n                suggestedMax: Math.max(...this.props.chartData[0].data) + 1\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      ...this.props.chartOptions\r\n    };\r\n\r\n    const chartConfig = {\r\n      ...{\r\n        type: \"line\",\r\n        data: {\r\n          ...{\r\n            labels: this.props.chartLabels\r\n          },\r\n          ...{\r\n            datasets: this.props.chartData\r\n          }\r\n        },\r\n        options: chartOptions\r\n      },\r\n      ...this.props.chartConfig\r\n    };\r\n\r\n    new Chart(this.canvasRef.current, chartConfig);\r\n  }\r\n\r\n  render() {\r\n    const { variation, label, value, percentage, increase } = this.props;\r\n\r\n    const cardClasses = classNames(\r\n      \"stats-small\",\r\n      variation && `stats-small--${variation}`\r\n    );\r\n\r\n    const cardBodyClasses = classNames(\r\n      variation === \"1\" ? \"p-0 d-flex\" : \"px-0 pb-0\"\r\n    );\r\n\r\n    const innerWrapperClasses = classNames(\r\n      \"d-flex\",\r\n      variation === \"1\" ? \"flex-column m-auto\" : \"px-3\"\r\n    );\r\n\r\n    const dataFieldClasses = classNames(\r\n      \"stats-small__data\",\r\n      variation === \"1\" && \"text-center\"\r\n    );\r\n\r\n    const labelClasses = classNames(\r\n      \"stats-small__label\",\r\n      \"text-uppercase\",\r\n      variation !== \"1\" && \"mb-1\"\r\n    );\r\n\r\n    const valueClasses = classNames(\r\n      \"stats-small__value\",\r\n      \"count\",\r\n      variation === \"1\" ? \"my-3\" : \"m-0\"\r\n    );\r\n\r\n    const innerDataFieldClasses = classNames(\r\n      \"stats-small__data\",\r\n      variation !== \"1\" && \"text-right align-items-center\"\r\n    );\r\n\r\n    const percentageClasses = classNames(\r\n      \"stats-small__percentage\",\r\n      `stats-small__percentage--${increase ? \"increase\" : \"decrease\"}`\r\n    );\r\n\r\n    const canvasHeight = variation === \"1\" ? 120 : 60;\r\n\r\n    return (\r\n      <Card small className={cardClasses}>\r\n        <CardBody className={cardBodyClasses}>\r\n          <div className={innerWrapperClasses}>\r\n            <div className={dataFieldClasses}>\r\n              <span className={labelClasses}>{label}</span>\r\n              <h6 className={valueClasses}>{value}</h6>\r\n            </div>\r\n            <div className={innerDataFieldClasses}>\r\n              <span className={percentageClasses}>{percentage}</span>\r\n            </div>\r\n          </div>\r\n          <canvas\r\n            height={canvasHeight}\r\n            ref={this.canvasRef}\r\n            className={`stats-small-${shortid()}`}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nSmallStats.propTypes = {\r\n  /**\r\n   * The Small Stats variation.\r\n   */\r\n  variation: PropTypes.string,\r\n  /**\r\n   * The label.\r\n   */\r\n  label: PropTypes.string,\r\n  /**\r\n   * The value.\r\n   */\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  /**\r\n   * The percentage number or string.\r\n   */\r\n  percentage: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  /**\r\n   * Whether is a value increase, or not.\r\n   */\r\n  increase: PropTypes.bool,\r\n  /**\r\n   * The Chart.js configuration object.\r\n   */\r\n  chartConfig: PropTypes.object,\r\n  /**\r\n   * The Chart.js options object.\r\n   */\r\n  chartOptions: PropTypes.object,\r\n  /**\r\n   * The chart data.\r\n   */\r\n  chartData: PropTypes.array.isRequired,\r\n  /**\r\n   * The chart labels.\r\n   */\r\n  chartLabels: PropTypes.array\r\n};\r\n\r\nSmallStats.defaultProps = {\r\n  increase: true,\r\n  percentage: 0,\r\n  value: 0,\r\n  label: \"Label\",\r\n  chartOptions: Object.create(null),\r\n  chartConfig: Object.create(null),\r\n  chartData: [],\r\n  chartLabels: []\r\n};\r\n\r\nexport default SmallStats;\r\n"]},"metadata":{},"sourceType":"module"}