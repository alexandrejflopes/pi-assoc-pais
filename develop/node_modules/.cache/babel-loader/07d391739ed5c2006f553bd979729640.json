{"ast":null,"code":"import { firestore, storageRef, initDoc } from \"../firebase-config\";\nimport React from \"react\"; // ------------------------------------------------------------\n// NOVOS PARAMETROS\n\nfunction getAndSaveJSONparamsData(jsonfile) {\n  let reader = new FileReader();\n  let fileString = \"NR\";\n\n  reader.onloadend = function () {\n    fileString = reader.result;\n    console.log(\"reader result depois de loaded -> \", fileString);\n    const json = JSON.parse(fileString);\n    saveNewParamsFromJSONToDB(json);\n  };\n\n  reader.readAsText(jsonfile, \"UTF-8\");\n}\n/*\r\n* recebe um obeto JSON e guarda-o na FireStore\r\n* */\n\n\nfunction saveNewParamsFromJSONToDB(json) {\n  const paramsDoc = json;\n  console.log(\"paramsDoc -> \", paramsDoc);\n  const docRef = firestore.doc(\"initialConfigs/newParameters\");\n  docRef.set(paramsDoc).then(function () {\n    alert(\"Novos parâmetros guardados com sucesso.\");\n  }).catch(function (error) {\n    alert(\"Erro: \" + error);\n  });\n} // ------------------------------------------------------------\n// PROCESSAR CSV\n\n/*\r\n* funcao que processa os CSV de membros e alunos:\r\n*   dado um CSV, extrai os cabecalhos e analisa cada linha\r\n*   - resultado para cada linha { \"header1\" : info1, \"header2\" : info2, ...}\r\n* */\n\n\nfunction getandSaveCSVdata(parentsFile, childrenFile) {\n  const parentReader = new FileReader();\n  const childrenReader = new FileReader();\n  let parentFileString = \"NR\";\n  let childrenFileString = \"NR\";\n\n  parentReader.onloadend = function () {\n    parentFileString = parentReader.result;\n    const parentList = setupCSVData(parentFileString);\n\n    childrenReader.onloadend = function () {\n      childrenFileString = childrenReader.result;\n      const childrenList = setupCSVData(childrenFileString);\n      saveParentsAndChildrenFromFileDatatoDB(parentList, childrenList);\n    };\n  };\n\n  parentReader.readAsText(parentsFile, \"UTF-8\");\n  childrenReader.readAsText(childrenFile, \"UTF-8\");\n}\n\nfunction setupCSVData(fileString) {\n  const allLines = fileString.split(/\\r\\n|\\n/).filter(item => item); // remover strings vazias\n\n  console.log(\"allLines -> \", allLines);\n  const headers = allLines[0].split(/[,;]+/).filter(item => item); // remover strings vazias\n\n  let rowsData = [];\n  console.log(\"headers -> \", headers);\n\n  for (let i = 1; i < allLines.length; i++) {\n    let lineDict = {};\n    let dadosLinha = allLines[i].split(/[,;]+/).filter(item => item); // remover strings vazias\n\n    console.log(\"dadosLinha atual -> \", dadosLinha);\n    console.assert(dadosLinha.length === headers.length);\n\n    for (let j = 0; j < dadosLinha.length; j++) {\n      lineDict[headers[j]] = dadosLinha[j];\n    }\n\n    rowsData.push(lineDict);\n  }\n\n  return rowsData;\n}\n/*\r\n* analisa os dados processados do CSV e guarda-os na Firestore:\r\n*   - para cada EE, vai ver os educandos com o seu numero de Socio\r\n*     para esse educando ser adicionado ao array de educandos (documentos)\r\n*     desse EE;\r\n*   - no final, o EE (já com o seu array de educandos) é guardado na Firestore\r\n* */\n\n\nfunction saveParentsAndChildrenFromFileDatatoDB(parentsList, childrenList) {\n  // lista de filhos e pais, ordenados pelo numero de socio do EE\n  const parentDocList = parentsList.sort((a, b) => parseInt(a[Object.keys(a)[0]]) > parseInt(b[Object.keys(b)[0]]) ? 1 : -1);\n  const childrenDocList = childrenList.sort((a, b) => parseInt(a[Object.keys(a)[0]]) > parseInt(b[Object.keys(b)[0]]) ? 1 : -1);\n  console.log(\"parentDocList -> \", parentDocList);\n  console.log(\"childrenDocList -> \", childrenDocList);\n  const docRef = firestore.collection(\"parents\"); // adicionar a cada EE os educandos com numSocio do EE igual ao EE atual\n\n  for (let i = 0; i < parentDocList.length; i++) {\n    let parentDoc = parentDocList[i];\n    console.log(\"parentDoc atual -> \", parentDoc);\n    const numSocio = parentDoc[Object.keys(parentDoc)[0]];\n    console.log(\"numSocio atual -> \", numSocio);\n    let parentChildren = []; // educandos do encarregado de educacao atual\n    // procurar por educandos com EE com o numSocio acima\n\n    for (let j = 0; j < childrenDocList.length; j++) {\n      const child = childrenDocList[j];\n      console.log(\"child atual -> \", child);\n      if (numSocio !== child[Object.keys(child)[0]]) // se nao tem igual numSocio, entao nao e filho dele\n        continue;\n      let childDoc = child;\n      console.log(\"childDoc a inserir -> \", childDoc); // remover o numero de socio e nome do EE, pois vai para dentro do documento do seu EE\n\n      delete childDoc[Object.keys(childDoc)[0]];\n      delete childDoc[Object.keys(childDoc)[0]]; // remover o 0 porque o que estava a 1 passou a zero na linha de cima\n\n      parentChildren.push(childDoc);\n    } // adicionar array para educandos\n\n\n    parentDoc[\"Educandos\"] = parentChildren;\n    const parentRef = docRef.doc(numSocio); // numero socio\n\n    parentRef.set(parentDoc).then(function () {\n      console.log(\"EE e educandos guardados com sucesso.\");\n    }).catch(function (error) {\n      alert(\"Erro: \" + error);\n    });\n  }\n}\n/*\r\n* (nao usada)\r\n* analisa os dados processados do CSV de educandos e guarda-os na Firestore:\r\n* */\n\n\nfunction saveChildDataFromFiletoDB(file) {\n  const childrenDocList = setupCSVData(file);\n  console.log(\"childrenDocList -> \", childrenDocList);\n  const docRef = firestore.collection(\"children\");\n\n  for (let i = 0; i < childrenDocList.length; i++) {\n    let childDoc = childrenDocList[i]; // adicionar array para educandos\n\n    childDoc[\"Educandos\"] = [];\n    console.log(\"childDoc atual -> \", childDoc);\n    const parentRef = docRef.doc(childDoc[Object.keys(childDoc)[0]]); // numero socio\n\n    parentRef.set(childDoc).then(function () {\n      alert(\"EE guardado com sucesso.\");\n    }).catch(function (error) {\n      alert(\"Erro: \" + error);\n    });\n  }\n}\n/*\r\n* (possivelmente, nao usada)\r\n* analisa os dados processados do CSV de EE e guarda-os na Firestore:\r\n* */\n\n\nfunction saveParentDataFromFiletoDB(file) {\n  const parentDocList = setupCSVData(file);\n  console.log(\"parentDocList -> \", parentDocList);\n  const docRef = firestore.collection(\"parents\");\n\n  for (let i = 0; i < parentDocList.length; i++) {\n    let parentDoc = parentDocList[i]; // adicionar array para educandos\n\n    parentDoc[\"Educandos\"] = [];\n    console.log(\"personsDoc atual -> \", parentDoc);\n    const parentRef = docRef.doc(parentDoc[Object.keys(parentDoc)[0]]); // numero socio\n\n    parentRef.set(parentDoc).then(function () {\n      alert(\"EE guardado com sucesso.\");\n    }).catch(function (error) {\n      alert(\"Erro: \" + error);\n    });\n  }\n}\n\nfunction createDefaultUser() {\n  const docRefUser = firestore.doc(\"initialConfigs/defaultUser\");\n  const defaultEmail = \"ricardo@email.pt\";\n  const defaultPassword = \"pass\";\n  const defaultName = \"Ricardo Silva\";\n  const defaultUser = {\n    email: defaultEmail,\n    password: defaultPassword,\n    nome: defaultName\n  };\n  docRefUser.set(defaultUser).then(function () {\n    console.log(\"defaultUserDoc -> \", defaultUser);\n  }).catch(function (error) {\n    alert(\"Erro: \" + error);\n  });\n}\n\nfunction uploadLogo(inputID) {\n  //var imagesRef = storageRef.child(\"images\");\n  const file = document.getElementById(inputID).files[0];\n  storageRef.child('logo/' + file.name).put(file).then(function (snapshot) {\n    alert('Uploaded a blob or file!');\n  }).catch(function (error) {\n    alert(error);\n  });\n}\n\nfunction uploadAssocDataFiles(inputID) {\n  const file = document.getElementById(inputID).files[0];\n  storageRef.child('assoc_config_files/' + file.name).put(file).then(function (snapshot) {\n    alert('Uploaded a blob or file!');\n  }).catch(function (error) {\n    alert(error);\n  });\n}\n\nfunction getFormElementsAndValues() {\n  const all_labels = Array.from(document.querySelectorAll(\"label\"));\n  let all_inputs = Array.from(document.querySelectorAll(\"input\"));\n  all_inputs.push(document.querySelector(\"#configAssocDescricao\")); // adicionar a textarea\n  //console.log(\"all_labels -> \", all_labels);\n  //console.log(\"all_inputs -> \", all_inputs);\n\n  /*const assoc_name = document.querySelector(\"#configAssocName\");\r\n  const assoc_descricao = document.querySelector(\"#configAssocDescricao\");\r\n  const assoc_morada = document.querySelector(\"#configAssocAddress\");\r\n  const assoc_localidade = document.querySelector(\"#configAssocLocalidade\");\r\n  const assoc_codigo_postal = document.querySelector(\"#configAssocZip\");\r\n  const assoc_email = document.querySelector(\"#configAssocEmail\");\r\n  const assoc_telefone = document.querySelector(\"#configAssocPhone\");\r\n  const assoc_iban = document.querySelector(\"#configAssocIBAN\");\r\n    const assoc_logo = document.querySelector(\"#configAssocLogo\");\r\n  const assoc_members = document.querySelector(\"#configAssocMembers\");\r\n  const assoc_students = document.querySelector(\"#configAssocStudents\");\r\n  const assoc_params = document.querySelector(\"#configAssocNewParams\");\r\n    let allInputs = [assoc_name, assoc_descricao, assoc_morada, assoc_localidade, assoc_codigo_postal,\r\n    assoc_email, assoc_telefone, assoc_iban, assoc_logo, assoc_members, assoc_students, assoc_params];*/\n\n  let submittedInputs = {}; //console.log(\"all_labels.length -> \", all_labels.length);\n  //console.log(\"all_inputs.length -> \", all_inputs.length);\n\n  for (let i = 0; i < all_labels.length; i++) {\n    for (let j = 0; j < all_inputs.length; j++) {\n      const label = all_labels[i];\n      const input = all_inputs[j]; //console.log(\"label atual: \", label + \" : \" + i);\n      //console.log(\"input atual: \", input + \" : \" + j);\n\n      let labelText = label.innerText;\n      let labelHtmlFor = label.htmlFor;\n      let inputId = input.id; //console.log(\"label atual text: \", labelText);\n      //console.log(\"label atual htmlFor: \", labelHtmlFor);\n      //console.log(\"input atual id: \", inputId);\n\n      if (labelHtmlFor === inputId) {\n        if (labelText.includes(\"(\") || labelText.includes(\"/\")) {\n          labelText = labelText.split(\" \")[0];\n        } //console.log(\"vou adicionar: {\" + labelText + \" : \" + inputId + \"}\");\n\n\n        submittedInputs[labelText] = input;\n        break;\n      }\n    }\n  } //console.log(\"submitted que vou devolver -> \", submittedInputs);\n\n\n  return submittedInputs;\n}\n\nfunction removeAllInvalidFeedbacks() {\n  const feedbacks = Array.from(document.querySelectorAll(\".invalid-feedback\")); //console.log(\"feedbacks -> \", feedbacks);\n\n  const inputs = Array.from(document.querySelectorAll(\"input\")); //console.log(\"inputs -> \", inputs);\n\n  for (let i = 0; i < feedbacks.length; i++) {\n    //console.log(\"f -> \", feedbacks[i]);\n    feedbacks[i].style.display = \"none\";\n  }\n\n  for (let i = 0; i < inputs.length; i++) {\n    //console.log(\"input a remover atual -> \", inputs);\n    if (inputs[i].classList.contains(\"is-invalid\")) {\n      //console.log(\"remover invalid de \", inputs[i]);\n      inputs[i].classList.remove(\"is-invalid\");\n    }\n  }\n}\n\nfunction install() {\n  removeAllInvalidFeedbacks();\n  let validatedFields = true;\n  let policyCheckboxChecked = true;\n  const inputsInfo = getFormElementsAndValues(); // { \"labelText\" : input }\n\n  console.log(\"inputsInfo -> \", inputsInfo);\n\n  for (const label in inputsInfo) {\n    let input = inputsInfo[label]; //console.log(\"input atual -> \", input);\n\n    if (input.value === \"\" && input.required) {\n      input.classList.add(\"is-invalid\"); //console.log(\"inputID -> \", input.id);\n\n      document.querySelector(\"#\" + input.id + \"Feedback\").style.display = \"block\";\n      validatedFields = false; // se houver um input obrigatorio sem nada, não submete\n      //break;\n    }\n  } // confirmar a checkBox\n\n\n  const policyCheckbox = document.querySelector(\"input[type=checkbox]\");\n\n  if (!policyCheckbox.checked) {\n    policyCheckboxChecked = false;\n    document.querySelector(\"#\" + policyCheckbox.id + \"Feedback\").style.display = \"block\";\n  }\n\n  if (validatedFields && policyCheckboxChecked) {\n    // uploads\n    uploadLogo(\"configAssocLogo\");\n    uploadAssocDataFiles(\"configAssocMembers\");\n    uploadAssocDataFiles(\"configAssocStudents\");\n    uploadAssocDataFiles(\"configAssocNewParams\"); // ler ficheiros e guardar dados\n\n    const paramsJSONfile = document.getElementById(\"configAssocNewParams\").files[0];\n    const membersFile = document.getElementById(\"configAssocMembers\").files[0];\n    const studentsFile = document.getElementById(\"configAssocStudents\").files[0];\n    getAndSaveJSONparamsData(paramsJSONfile);\n    getandSaveCSVdata(membersFile, studentsFile);\n\n    const setupDataDoc = () => {\n      let temp = {};\n\n      for (const label in inputsInfo) {\n        temp[label] = inputsInfo[label].value;\n      }\n\n      return temp;\n    };\n\n    const dataDoc = setupDataDoc();\n    console.log(\"dataDoc -> \", dataDoc);\n    const docRef = firestore.doc(\"initialConfigs/parameters\");\n    alert(\"ler os consoles\");\n    docRef.set(dataDoc).then(function () {\n      // ------------- documento instalacao\n      const doc = {\n        installation: true\n      };\n      initDoc.set(doc).then(function () {\n        console.log(\"initDoc -> \", doc);\n        createDefaultUser(); // TODO: usar Firebase Authentication\n\n        window.location.href = \"/\";\n      }).catch(function (error) {\n        alert(\"Erro: \" + error);\n      });\n    }).catch(function (error) {\n      alert(\"Erro: \" + error);\n    });\n  } else alert(\"Campos em falta.\");\n}\n\nexport { install };","map":{"version":3,"sources":["D:/Github/pi-assoc-pais/develop/src/firebase_scripts/installation.js"],"names":["firestore","storageRef","initDoc","React","getAndSaveJSONparamsData","jsonfile","reader","FileReader","fileString","onloadend","result","console","log","json","JSON","parse","saveNewParamsFromJSONToDB","readAsText","paramsDoc","docRef","doc","set","then","alert","catch","error","getandSaveCSVdata","parentsFile","childrenFile","parentReader","childrenReader","parentFileString","childrenFileString","parentList","setupCSVData","childrenList","saveParentsAndChildrenFromFileDatatoDB","allLines","split","filter","item","headers","rowsData","i","length","lineDict","dadosLinha","assert","j","push","parentsList","parentDocList","sort","a","b","parseInt","Object","keys","childrenDocList","collection","parentDoc","numSocio","parentChildren","child","childDoc","parentRef","saveChildDataFromFiletoDB","file","saveParentDataFromFiletoDB","createDefaultUser","docRefUser","defaultEmail","defaultPassword","defaultName","defaultUser","email","password","nome","uploadLogo","inputID","document","getElementById","files","name","put","snapshot","uploadAssocDataFiles","getFormElementsAndValues","all_labels","Array","from","querySelectorAll","all_inputs","querySelector","submittedInputs","label","input","labelText","innerText","labelHtmlFor","htmlFor","inputId","id","includes","removeAllInvalidFeedbacks","feedbacks","inputs","style","display","classList","contains","remove","install","validatedFields","policyCheckboxChecked","inputsInfo","value","required","add","policyCheckbox","checked","paramsJSONfile","membersFile","studentsFile","setupDataDoc","temp","dataDoc","installation","window","location","href"],"mappings":"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","sourcesContent":["import {firestore, storageRef, initDoc} from \"../firebase-config\";\r\nimport React from \"react\";\r\n\r\n\r\n\r\n\r\n\r\n// ------------------------------------------------------------\r\n// NOVOS PARAMETROS\r\n\r\nfunction getAndSaveJSONparamsData(jsonfile) {\r\n\r\n  let reader = new FileReader();\r\n  let fileString = \"NR\";\r\n\r\n  reader.onloadend = function(){\r\n    fileString = reader.result;\r\n    console.log(\"reader result depois de loaded -> \", fileString);\r\n    const json = JSON.parse(fileString);\r\n    saveNewParamsFromJSONToDB(json);\r\n  };\r\n\r\n  reader.readAsText(jsonfile, \"UTF-8\");\r\n\r\n}\r\n\r\n\r\n/*\r\n* recebe um obeto JSON e guarda-o na FireStore\r\n* */\r\nfunction saveNewParamsFromJSONToDB(json) {\r\n\r\n  const paramsDoc = json;\r\n\r\n  console.log(\"paramsDoc -> \", paramsDoc);\r\n\r\n  const docRef = firestore.doc(\"initialConfigs/newParameters\");\r\n\r\n  docRef.set(paramsDoc)\r\n    .then(function () {\r\n      alert(\"Novos parâmetros guardados com sucesso.\")\r\n\r\n    }).catch(function (error) {\r\n    alert(\"Erro: \" + error);\r\n\r\n  });\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// ------------------------------------------------------------\r\n// PROCESSAR CSV\r\n\r\n\r\n/*\r\n* funcao que processa os CSV de membros e alunos:\r\n*   dado um CSV, extrai os cabecalhos e analisa cada linha\r\n*   - resultado para cada linha { \"header1\" : info1, \"header2\" : info2, ...}\r\n* */\r\nfunction getandSaveCSVdata(parentsFile, childrenFile) {\r\n\r\n  const parentReader = new FileReader();\r\n  const childrenReader = new FileReader();\r\n  let parentFileString = \"NR\";\r\n  let childrenFileString = \"NR\";\r\n\r\n\r\n  parentReader.onloadend = function(){\r\n    parentFileString = parentReader.result;\r\n    const parentList = setupCSVData(parentFileString);\r\n\r\n\r\n    childrenReader.onloadend = function(){\r\n      childrenFileString = childrenReader.result;\r\n      const childrenList = setupCSVData(childrenFileString);\r\n\r\n      saveParentsAndChildrenFromFileDatatoDB(parentList, childrenList);\r\n    };\r\n  };\r\n\r\n  parentReader.readAsText(parentsFile, \"UTF-8\");\r\n  childrenReader.readAsText(childrenFile, \"UTF-8\");\r\n\r\n}\r\n\r\n\r\nfunction setupCSVData(fileString) {\r\n\r\n  const allLines = fileString.split(/\\r\\n|\\n/).filter(item => item); // remover strings vazias\r\n  console.log(\"allLines -> \", allLines);\r\n\r\n  const headers = allLines[0].split(/[,;]+/).filter(item => item); // remover strings vazias\r\n  let rowsData = [];\r\n\r\n\r\n  console.log(\"headers -> \", headers);\r\n\r\n\r\n  for (let i=1; i<allLines.length; i++){\r\n\r\n    let lineDict = {};\r\n\r\n    let dadosLinha = allLines[i].split(/[,;]+/).filter(item => item); // remover strings vazias\r\n\r\n    console.log(\"dadosLinha atual -> \", dadosLinha);\r\n\r\n    console.assert(dadosLinha.length === headers.length);\r\n\r\n    for(let j=0; j<dadosLinha.length; j++){\r\n      lineDict[headers[j]] = dadosLinha[j];\r\n    }\r\n\r\n    rowsData.push(lineDict);\r\n\r\n  }\r\n\r\n\r\n  return rowsData;\r\n\r\n}\r\n\r\n\r\n/*\r\n* analisa os dados processados do CSV e guarda-os na Firestore:\r\n*   - para cada EE, vai ver os educandos com o seu numero de Socio\r\n*     para esse educando ser adicionado ao array de educandos (documentos)\r\n*     desse EE;\r\n*   - no final, o EE (já com o seu array de educandos) é guardado na Firestore\r\n* */\r\nfunction saveParentsAndChildrenFromFileDatatoDB(parentsList, childrenList) {\r\n\r\n  // lista de filhos e pais, ordenados pelo numero de socio do EE\r\n  const parentDocList = parentsList\r\n    .sort((a, b) => (parseInt(a[Object.keys(a)[0]]) > parseInt(b[Object.keys(b)[0]])) ? 1 : -1);\r\n\r\n  const childrenDocList = childrenList\r\n    .sort((a, b) => (parseInt(a[Object.keys(a)[0]]) > parseInt(b[Object.keys(b)[0]])) ? 1 : -1);\r\n\r\n  console.log(\"parentDocList -> \",parentDocList);\r\n  console.log(\"childrenDocList -> \",childrenDocList);\r\n\r\n  const docRef = firestore.collection(\"parents\");\r\n\r\n  // adicionar a cada EE os educandos com numSocio do EE igual ao EE atual\r\n  for(let i=0; i<parentDocList.length; i++){\r\n    let parentDoc = parentDocList[i];\r\n\r\n    console.log(\"parentDoc atual -> \",parentDoc);\r\n    const numSocio = parentDoc[Object.keys(parentDoc)[0]];\r\n\r\n    console.log(\"numSocio atual -> \",numSocio);\r\n\r\n    let parentChildren = []; // educandos do encarregado de educacao atual\r\n\r\n    // procurar por educandos com EE com o numSocio acima\r\n    for(let j=0; j<childrenDocList.length; j++){\r\n\r\n      const child = childrenDocList[j];\r\n\r\n      console.log(\"child atual -> \", child);\r\n\r\n      if(numSocio !== child[Object.keys(child)[0]]) // se nao tem igual numSocio, entao nao e filho dele\r\n        continue;\r\n\r\n      let childDoc = child;\r\n\r\n      console.log(\"childDoc a inserir -> \", childDoc);\r\n      // remover o numero de socio e nome do EE, pois vai para dentro do documento do seu EE\r\n      delete childDoc[Object.keys(childDoc)[0]];\r\n      delete childDoc[Object.keys(childDoc)[0]]; // remover o 0 porque o que estava a 1 passou a zero na linha de cima\r\n\r\n      parentChildren.push(childDoc);\r\n    }\r\n\r\n\r\n    // adicionar array para educandos\r\n    parentDoc[\"Educandos\"] = parentChildren;\r\n\r\n\r\n    const parentRef = docRef.doc(numSocio); // numero socio\r\n\r\n    parentRef.set(parentDoc)\r\n      .then(function () {\r\n        console.log(\"EE e educandos guardados com sucesso.\")\r\n\r\n      }).catch(function (error) {\r\n      alert(\"Erro: \" + error);\r\n\r\n    });\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n/*\r\n* (nao usada)\r\n* analisa os dados processados do CSV de educandos e guarda-os na Firestore:\r\n* */\r\nfunction saveChildDataFromFiletoDB(file) {\r\n\r\n  const childrenDocList = setupCSVData(file);\r\n\r\n  console.log(\"childrenDocList -> \", childrenDocList);\r\n\r\n  const docRef = firestore.collection(\"children\");\r\n\r\n\r\n  for(let i=0; i<childrenDocList.length; i++){\r\n    let childDoc = childrenDocList[i];\r\n\r\n    // adicionar array para educandos\r\n    childDoc[\"Educandos\"] = [];\r\n\r\n    console.log(\"childDoc atual -> \", childDoc);\r\n\r\n    const parentRef = docRef.doc(childDoc[Object.keys(childDoc)[0]]); // numero socio\r\n\r\n    parentRef.set(childDoc)\r\n      .then(function () {\r\n        alert(\"EE guardado com sucesso.\")\r\n\r\n      }).catch(function (error) {\r\n      alert(\"Erro: \" + error);\r\n\r\n    });\r\n  }\r\n\r\n\r\n}\r\n\r\n/*\r\n* (possivelmente, nao usada)\r\n* analisa os dados processados do CSV de EE e guarda-os na Firestore:\r\n* */\r\nfunction saveParentDataFromFiletoDB(file) {\r\n\r\n  const parentDocList = setupCSVData(file);\r\n\r\n  console.log(\"parentDocList -> \", parentDocList);\r\n\r\n  const docRef = firestore.collection(\"parents\");\r\n\r\n\r\n  for(let i=0; i<parentDocList.length; i++){\r\n    let parentDoc = parentDocList[i];\r\n\r\n    // adicionar array para educandos\r\n    parentDoc[\"Educandos\"] = [];\r\n\r\n    console.log(\"personsDoc atual -> \", parentDoc);\r\n\r\n    const parentRef = docRef.doc(parentDoc[Object.keys(parentDoc)[0]]); // numero socio\r\n\r\n    parentRef.set(parentDoc)\r\n      .then(function () {\r\n        alert(\"EE guardado com sucesso.\")\r\n\r\n      }).catch(function (error) {\r\n      alert(\"Erro: \" + error);\r\n\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nfunction createDefaultUser() {\r\n\r\n  const docRefUser = firestore.doc(\"initialConfigs/defaultUser\");\r\n\r\n  const defaultEmail = \"ricardo@email.pt\";\r\n  const defaultPassword = \"pass\";\r\n  const defaultName = \"Ricardo Silva\";\r\n\r\n  const defaultUser = {\r\n    email : defaultEmail,\r\n    password : defaultPassword,\r\n    nome : defaultName\r\n  };\r\n\r\n  docRefUser.set(defaultUser)\r\n    .then(function () {\r\n      console.log(\"defaultUserDoc -> \", defaultUser);\r\n\r\n    }).catch(function (error) {\r\n    alert(\"Erro: \" + error);\r\n  });\r\n\r\n}\r\n\r\nfunction uploadLogo(inputID) {\r\n  //var imagesRef = storageRef.child(\"images\");\r\n\r\n  const file = document.getElementById(inputID).files[0];\r\n\r\n  storageRef.child('logo/' + file.name).put(file)\r\n    .then(function(snapshot) {\r\n      alert('Uploaded a blob or file!');\r\n    })\r\n    .catch(function (error) {\r\n      alert(error);\r\n    });\r\n}\r\n\r\n\r\nfunction uploadAssocDataFiles(inputID) {\r\n\r\n  const file = document.getElementById(inputID).files[0];\r\n\r\n  storageRef.child('assoc_config_files/' + file.name).put(file)\r\n    .then(function(snapshot) {\r\n      alert('Uploaded a blob or file!');\r\n    })\r\n    .catch(function (error) {\r\n      alert(error);\r\n    });\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction getFormElementsAndValues() {\r\n\r\n  const all_labels = Array.from(document.querySelectorAll(\"label\"));\r\n  let all_inputs = Array.from(document.querySelectorAll(\"input\"));\r\n  all_inputs.push(document.querySelector(\"#configAssocDescricao\")); // adicionar a textarea\r\n\r\n\r\n  //console.log(\"all_labels -> \", all_labels);\r\n  //console.log(\"all_inputs -> \", all_inputs);\r\n\r\n  /*const assoc_name = document.querySelector(\"#configAssocName\");\r\n  const assoc_descricao = document.querySelector(\"#configAssocDescricao\");\r\n  const assoc_morada = document.querySelector(\"#configAssocAddress\");\r\n  const assoc_localidade = document.querySelector(\"#configAssocLocalidade\");\r\n  const assoc_codigo_postal = document.querySelector(\"#configAssocZip\");\r\n  const assoc_email = document.querySelector(\"#configAssocEmail\");\r\n  const assoc_telefone = document.querySelector(\"#configAssocPhone\");\r\n  const assoc_iban = document.querySelector(\"#configAssocIBAN\");\r\n\r\n  const assoc_logo = document.querySelector(\"#configAssocLogo\");\r\n  const assoc_members = document.querySelector(\"#configAssocMembers\");\r\n  const assoc_students = document.querySelector(\"#configAssocStudents\");\r\n  const assoc_params = document.querySelector(\"#configAssocNewParams\");\r\n\r\n  let allInputs = [assoc_name, assoc_descricao, assoc_morada, assoc_localidade, assoc_codigo_postal,\r\n    assoc_email, assoc_telefone, assoc_iban, assoc_logo, assoc_members, assoc_students, assoc_params];*/\r\n\r\n  let submittedInputs = {};\r\n\r\n  //console.log(\"all_labels.length -> \", all_labels.length);\r\n  //console.log(\"all_inputs.length -> \", all_inputs.length);\r\n\r\n  for(let i = 0; i<all_labels.length; i++){\r\n    for(let j = 0; j<all_inputs.length; j++){\r\n      const label = all_labels[i];\r\n      const input = all_inputs[j];\r\n\r\n      //console.log(\"label atual: \", label + \" : \" + i);\r\n      //console.log(\"input atual: \", input + \" : \" + j);\r\n\r\n      let labelText = label.innerText;\r\n      let labelHtmlFor = label.htmlFor;\r\n      let inputId = input.id;\r\n\r\n      //console.log(\"label atual text: \", labelText);\r\n      //console.log(\"label atual htmlFor: \", labelHtmlFor);\r\n      //console.log(\"input atual id: \", inputId);\r\n\r\n\r\n\r\n      if (labelHtmlFor === inputId){\r\n        if(labelText.includes(\"(\") || labelText.includes(\"/\")){\r\n          labelText = labelText.split(\" \")[0];\r\n        }\r\n\r\n        //console.log(\"vou adicionar: {\" + labelText + \" : \" + inputId + \"}\");\r\n\r\n        submittedInputs[labelText] = input;\r\n\r\n        break;\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  //console.log(\"submitted que vou devolver -> \", submittedInputs);\r\n\r\n\r\n  return submittedInputs;\r\n\r\n\r\n}\r\n\r\n\r\n\r\nfunction removeAllInvalidFeedbacks() {\r\n\r\n  const feedbacks = Array.from(document.querySelectorAll(\".invalid-feedback\"));\r\n  //console.log(\"feedbacks -> \", feedbacks);\r\n  const inputs = Array.from(document.querySelectorAll(\"input\"));\r\n  //console.log(\"inputs -> \", inputs);\r\n\r\n\r\n  for(let i = 0; i<feedbacks.length; i++){\r\n    //console.log(\"f -> \", feedbacks[i]);\r\n    feedbacks[i].style.display = \"none\";\r\n  }\r\n\r\n  for(let i = 0; i<inputs.length; i++){\r\n    //console.log(\"input a remover atual -> \", inputs);\r\n    if (inputs[i].classList.contains(\"is-invalid\")){\r\n      //console.log(\"remover invalid de \", inputs[i]);\r\n      inputs[i].classList.remove(\"is-invalid\");\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction install() {\r\n\r\n  removeAllInvalidFeedbacks();\r\n\r\n  let validatedFields = true;\r\n  let policyCheckboxChecked = true;\r\n\r\n\r\n  const inputsInfo = getFormElementsAndValues(); // { \"labelText\" : input }\r\n\r\n  console.log(\"inputsInfo -> \", inputsInfo);\r\n\r\n  for(const label in inputsInfo){\r\n    let input = inputsInfo[label];\r\n    //console.log(\"input atual -> \", input);\r\n      if (input.value === \"\" && input.required){\r\n        input.classList.add(\"is-invalid\");\r\n        //console.log(\"inputID -> \", input.id);\r\n        document.querySelector(\"#\" + input.id + \"Feedback\").style.display = \"block\";\r\n        validatedFields = false; // se houver um input obrigatorio sem nada, não submete\r\n        //break;\r\n      }\r\n  }\r\n\r\n\r\n  // confirmar a checkBox\r\n  const policyCheckbox = document.querySelector(\"input[type=checkbox]\");\r\n  if(!policyCheckbox.checked){\r\n    policyCheckboxChecked = false;\r\n    document.querySelector(\"#\" + policyCheckbox.id + \"Feedback\").style.display = \"block\";\r\n  }\r\n\r\n\r\n\r\n  if(validatedFields && policyCheckboxChecked){\r\n\r\n    // uploads\r\n    uploadLogo(\"configAssocLogo\");\r\n    uploadAssocDataFiles(\"configAssocMembers\");\r\n    uploadAssocDataFiles(\"configAssocStudents\");\r\n    uploadAssocDataFiles(\"configAssocNewParams\");\r\n\r\n    // ler ficheiros e guardar dados\r\n    const paramsJSONfile = document.getElementById(\"configAssocNewParams\").files[0];\r\n    const membersFile = document.getElementById(\"configAssocMembers\").files[0];\r\n    const studentsFile = document.getElementById(\"configAssocStudents\").files[0];\r\n\r\n    getAndSaveJSONparamsData(paramsJSONfile);\r\n    getandSaveCSVdata(membersFile, studentsFile);\r\n\r\n    const setupDataDoc = () => {\r\n      let temp = {};\r\n      for(const label in inputsInfo){\r\n        temp[label] = inputsInfo[label].value;\r\n      }\r\n\r\n      return temp;\r\n    };\r\n\r\n    const dataDoc = setupDataDoc();\r\n\r\n    console.log(\"dataDoc -> \", dataDoc);\r\n\r\n    const docRef = firestore.doc(\"initialConfigs/parameters\");\r\n\r\n    alert(\"ler os consoles\");\r\n\r\n\r\n    docRef.set(dataDoc)\r\n      .then(function () {\r\n        // ------------- documento instalacao\r\n        const doc = {\r\n          installation : true\r\n        };\r\n\r\n        initDoc.set(doc)\r\n          .then(function () {\r\n            console.log(\"initDoc -> \", doc);\r\n            createDefaultUser(); // TODO: usar Firebase Authentication\r\n            window.location.href = \"/\";\r\n\r\n          }).catch(function (error) {\r\n          alert(\"Erro: \" + error);\r\n\r\n        });\r\n\r\n\r\n      }).catch(function (error) {\r\n      alert(\"Erro: \" + error);\r\n\r\n    });\r\n\r\n  }\r\n  else alert(\"Campos em falta.\")\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport {install};\r\n"]},"metadata":{},"sourceType":"module"}